/*
* generated by Xtext
*/
grammar InternalFeatureModel;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.xtext.featuremodel.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.featuremodel.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.featuremodel.services.FeatureModelGrammarAccess;

}

@parser::members {

 	private FeatureModelGrammarAccess grammarAccess;
 	
    public InternalFeatureModelParser(TokenStream input, FeatureModelGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "FeatureModel";	
   	}
   	
   	@Override
   	protected FeatureModelGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleFeatureModel
entryRuleFeatureModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeatureModelRule()); }
	 iv_ruleFeatureModel=ruleFeatureModel 
	 { $current=$iv_ruleFeatureModel.current; } 
	 EOF 
;

// Rule FeatureModel
ruleFeatureModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='<?xml version="1.0" encoding="UTF-8"?>' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFeatureModelAccess().getXmlVersion10EncodingUTF8Keyword_0());
    }
	otherlv_1='<fm:FeatureModel fm:value="FeatureModel"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFeatureModelAccess().getFmFeatureModelFmValueFeatureModelKeyword_1());
    }
	otherlv_2='xmlns:fm="http://www.pnp-software.com/XFeature/fmm"' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFeatureModelAccess().getXmlnsFmHttpWwwPnpSoftwareComXFeatureFmmKeyword_2());
    }
	otherlv_3='xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFeatureModelAccess().getXmlnsXsiHttpWwwW3Org2001XMLSchemaInstanceKeyword_3());
    }
	otherlv_4='xsi:schemaLocation="http://www.pnp-software.com/XFeature/fmm ./FeatureModel.xfmm">' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFeatureModelAccess().getXsiSchemaLocationHttpWwwPnpSoftwareComXFeatureFmmFeatureModelXfmmKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureModelAccess().getContainsRootRootFeatureParserRuleCall_5_0()); 
	    }
		lv_containsRoot_5_0=ruleRootFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureModelRule());
	        }
       		add(
       			$current, 
       			"containsRoot",
        		lv_containsRoot_5_0, 
        		"RootFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_6='</fm:FeatureModel>' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getFeatureModelAccess().getFmFeatureModelKeyword_6());
    }
)
;





// Entry rule entryRuleRootFeature
entryRuleRootFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRootFeatureRule()); }
	 iv_ruleRootFeature=ruleRootFeature 
	 { $current=$iv_ruleRootFeature.current; } 
	 EOF 
;

// Rule RootFeature
ruleRootFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='<fm:RootFeature fm:value=' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRootFeatureAccess().getFmRootFeatureFmValueKeyword_0());
    }
(
(
		lv_name_1_0=RULE_STRING
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRootFeatureAccess().getNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRootFeatureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='>' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRootFeatureAccess().getGreaterThanSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRootFeatureAccess().getAnnotationAnnotationParserRuleCall_3_0()); 
	    }
		lv_annotation_3_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRootFeatureRule());
	        }
       		add(
       			$current, 
       			"annotation",
        		lv_annotation_3_0, 
        		"Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getRootFeatureAccess().getContainsRelationRelationshipParserRuleCall_4_0()); 
	    }
		lv_containsRelation_4_0=ruleRelationship		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRootFeatureRule());
	        }
       		add(
       			$current, 
       			"containsRelation",
        		lv_containsRelation_4_0, 
        		"Relationship");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getRootFeatureAccess().getContainsFeatureFeatureParserRuleCall_5_0()); 
	    }
		lv_containsFeature_5_0=ruleFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRootFeatureRule());
	        }
       		add(
       			$current, 
       			"containsFeature",
        		lv_containsFeature_5_0, 
        		"Feature");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='</fm:RootFeature>' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRootFeatureAccess().getFmRootFeatureKeyword_6());
    }
)
;





// Entry rule entryRuleAnnotation
entryRuleAnnotation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationRule()); }
	 iv_ruleAnnotation=ruleAnnotation 
	 { $current=$iv_ruleAnnotation.current; } 
	 EOF 
;

// Rule Annotation
ruleAnnotation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='<fm:Annotation fm:value="Annotation">' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAnnotationAccess().getFmAnnotationFmValueAnnotationKeyword_0());
    }
	otherlv_1='<fm:Description fm:value=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAnnotationAccess().getFmDescriptionFmValueKeyword_1());
    }
(
(
		lv_description_2_0=RULE_STRING
		{
			newLeafNode(lv_description_2_0, grammarAccess.getAnnotationAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAnnotationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_2_0, 
        		"STRING");
	    }

)
)	otherlv_3='/>' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAnnotationAccess().getSolidusGreaterThanSignKeyword_3());
    }
	otherlv_4='</fm:Annotation>' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAnnotationAccess().getFmAnnotationKeyword_4());
    }
)
;





// Entry rule entryRuleRelationship
entryRuleRelationship returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationshipRule()); }
	 iv_ruleRelationship=ruleRelationship 
	 { $current=$iv_ruleRelationship.current; } 
	 EOF 
;

// Rule Relationship
ruleRelationship returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRelationshipAccess().getMandatoryParserRuleCall_0()); 
    }
    this_Mandatory_0=ruleMandatory
    { 
        $current = $this_Mandatory_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRelationshipAccess().getOptionalParserRuleCall_1()); 
    }
    this_Optional_1=ruleOptional
    { 
        $current = $this_Optional_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRelationshipAccess().getAlternativeParserRuleCall_2()); 
    }
    this_Alternative_2=ruleAlternative
    { 
        $current = $this_Alternative_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRelationshipAccess().getInclusive_OrParserRuleCall_3()); 
    }
    this_Inclusive_Or_3=ruleInclusive_Or
    { 
        $current = $this_Inclusive_Or_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRelationshipAccess().getGroupCardinalityParserRuleCall_4()); 
    }
    this_GroupCardinality_4=ruleGroupCardinality
    { 
        $current = $this_GroupCardinality_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleMandatory
entryRuleMandatory returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMandatoryRule()); }
	 iv_ruleMandatory=ruleMandatory 
	 { $current=$iv_ruleMandatory.current; } 
	 EOF 
;

// Rule Mandatory
ruleMandatory returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getMandatoryAccess().getMandatoryAction_0_0(),
            $current);
    }
)	otherlv_1='<fm:Cardinality fm:cardMax=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMandatoryAccess().getFmCardinalityFmCardMaxKeyword_0_1());
    }
	otherlv_2='"1"' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMandatoryAccess().getQuotationMarkDigitOneQuotationMarkKeyword_0_2());
    }
	otherlv_3='fm:cardMin=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMandatoryAccess().getFmCardMinKeyword_0_3());
    }
	otherlv_4='"1"' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMandatoryAccess().getQuotationMarkDigitOneQuotationMarkKeyword_0_4());
    }
	otherlv_5='/>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMandatoryAccess().getSolidusGreaterThanSignKeyword_0_5());
    }
)
    |(	otherlv_6='<fm:Cardinality fm:cardMax=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMandatoryAccess().getFmCardinalityFmCardMaxKeyword_1_0());
    }
(
(
		lv_cardinalityMax_7_0=RULE_STRING
		{
			newLeafNode(lv_cardinalityMax_7_0, grammarAccess.getMandatoryAccess().getCardinalityMaxSTRINGTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMandatoryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"cardinalityMax",
        		lv_cardinalityMax_7_0, 
        		"STRING");
	    }

)
)	otherlv_8='fm:cardMin=' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMandatoryAccess().getFmCardMinKeyword_1_2());
    }
(
(
		lv_cardinalityMin_9_0=	'1' 
    {
        newLeafNode(lv_cardinalityMin_9_0, grammarAccess.getMandatoryAccess().getCardinalityMin1Keyword_1_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMandatoryRule());
	        }
       		setWithLastConsumed($current, "cardinalityMin", lv_cardinalityMin_9_0, "1");
	    }

)
)	otherlv_10='/>' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getMandatoryAccess().getSolidusGreaterThanSignKeyword_1_4());
    }
))
;





// Entry rule entryRuleOptional
entryRuleOptional returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOptionalRule()); }
	 iv_ruleOptional=ruleOptional 
	 { $current=$iv_ruleOptional.current; } 
	 EOF 
;

// Rule Optional
ruleOptional returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getOptionalAccess().getOptionalAction_0_0(),
            $current);
    }
)	otherlv_1='<fm:Cardinality fm:cardMax=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOptionalAccess().getFmCardinalityFmCardMaxKeyword_0_1());
    }
	otherlv_2='"1"' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOptionalAccess().getQuotationMarkDigitOneQuotationMarkKeyword_0_2());
    }
	otherlv_3='fm:cardMin=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOptionalAccess().getFmCardMinKeyword_0_3());
    }
	otherlv_4='"0"' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOptionalAccess().getQuotationMarkDigitZeroQuotationMarkKeyword_0_4());
    }
	otherlv_5='/>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOptionalAccess().getSolidusGreaterThanSignKeyword_0_5());
    }
)
    |(	otherlv_6='<fm:Cardinality fm:cardMax=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getOptionalAccess().getFmCardinalityFmCardMaxKeyword_1_0());
    }
(
(
		lv_cardinalityMax_7_0=RULE_STRING
		{
			newLeafNode(lv_cardinalityMax_7_0, grammarAccess.getOptionalAccess().getCardinalityMaxSTRINGTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOptionalRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"cardinalityMax",
        		lv_cardinalityMax_7_0, 
        		"STRING");
	    }

)
)	otherlv_8='fm:cardMin=' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getOptionalAccess().getFmCardMinKeyword_1_2());
    }
(
(
		lv_cardinalityMin_9_0=	'0' 
    {
        newLeafNode(lv_cardinalityMin_9_0, grammarAccess.getOptionalAccess().getCardinalityMin0Keyword_1_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOptionalRule());
	        }
       		setWithLastConsumed($current, "cardinalityMin", lv_cardinalityMin_9_0, "0");
	    }

)
)	otherlv_10='/>' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getOptionalAccess().getSolidusGreaterThanSignKeyword_1_4());
    }
))
;





// Entry rule entryRuleAlternative
entryRuleAlternative returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAlternativeRule()); }
	 iv_ruleAlternative=ruleAlternative 
	 { $current=$iv_ruleAlternative.current; } 
	 EOF 
;

// Rule Alternative
ruleAlternative returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAlternativeAccess().getAlternativeAction_0(),
            $current);
    }
)	otherlv_1='<fm:CardinalityAlternative fm:cardMax="1" fm:cardMin="1"/>' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAlternativeAccess().getFmCardinalityAlternativeFmCardMax1FmCardMin1Keyword_1());
    }
)
;





// Entry rule entryRuleInclusive_Or
entryRuleInclusive_Or returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInclusive_OrRule()); }
	 iv_ruleInclusive_Or=ruleInclusive_Or 
	 { $current=$iv_ruleInclusive_Or.current; } 
	 EOF 
;

// Rule Inclusive_Or
ruleInclusive_Or returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInclusive_OrAccess().getInclusive_OrAction_0(),
            $current);
    }
)(	otherlv_1='<fm:CardinalityInclusiveOr fm:cardMax="n" fm:cardMin="1"/>' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInclusive_OrAccess().getFmCardinalityInclusiveOrFmCardMaxNFmCardMin1Keyword_1_0());
    }

    |	otherlv_2='<fm:CardinalityInclusiveOr fm:cardMax="*" fm:cardMin="1"/>' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInclusive_OrAccess().getFmCardinalityInclusiveOrFmCardMaxFmCardMin1Keyword_1_1());
    }
))
;





// Entry rule entryRuleGroupCardinality
entryRuleGroupCardinality returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGroupCardinalityRule()); }
	 iv_ruleGroupCardinality=ruleGroupCardinality 
	 { $current=$iv_ruleGroupCardinality.current; } 
	 EOF 
;

// Rule GroupCardinality
ruleGroupCardinality returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='<fm:FeatureGroup fm:value="FeatureGroup">' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGroupCardinalityAccess().getFmFeatureGroupFmValueFeatureGroupKeyword_0());
    }
	otherlv_1='<fm:Cardinality fm:cardMax=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getGroupCardinalityAccess().getFmCardinalityFmCardMaxKeyword_1());
    }
(
(
		lv_cardinalityMax_2_0=RULE_STRING
		{
			newLeafNode(lv_cardinalityMax_2_0, grammarAccess.getGroupCardinalityAccess().getCardinalityMaxSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGroupCardinalityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"cardinalityMax",
        		lv_cardinalityMax_2_0, 
        		"STRING");
	    }

)
)	otherlv_3='fm:cardMin=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getGroupCardinalityAccess().getFmCardMinKeyword_3());
    }
(
(
		lv_cardinalityMin_4_0=RULE_STRING
		{
			newLeafNode(lv_cardinalityMin_4_0, grammarAccess.getGroupCardinalityAccess().getCardinalityMinSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGroupCardinalityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"cardinalityMin",
        		lv_cardinalityMin_4_0, 
        		"STRING");
	    }

)
)	otherlv_5='/>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getGroupCardinalityAccess().getSolidusGreaterThanSignKeyword_5());
    }
	otherlv_6='<fm:GroupedFeatures fm:value=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getGroupCardinalityAccess().getFmGroupedFeaturesFmValueKeyword_6());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGroupCardinalityRule());
	        }
        }
	otherlv_7=RULE_STRING
	{
		newLeafNode(otherlv_7, grammarAccess.getGroupCardinalityAccess().getTargetGroupedFeatureCrossReference_7_0()); 
	}

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getGroupCardinalityAccess().getCommaKeyword_8_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGroupCardinalityRule());
	        }
        }
	otherlv_9=RULE_STRING
	{
		newLeafNode(otherlv_9, grammarAccess.getGroupCardinalityAccess().getTargetGroupedFeatureCrossReference_8_1_0()); 
	}

)
))*	otherlv_10='/>' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getGroupCardinalityAccess().getSolidusGreaterThanSignKeyword_9());
    }
)
;





// Entry rule entryRuleFeature
entryRuleFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeatureRule()); }
	 iv_ruleFeature=ruleFeature 
	 { $current=$iv_ruleFeature.current; } 
	 EOF 
;

// Rule Feature
ruleFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFeatureAccess().getFeature_ImplParserRuleCall_0()); 
    }
    this_Feature_Impl_0=ruleFeature_Impl
    { 
        $current = $this_Feature_Impl_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFeatureAccess().getReferenceFeatureParserRuleCall_1()); 
    }
    this_ReferenceFeature_1=ruleReferenceFeature
    { 
        $current = $this_ReferenceFeature_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFeatureAccess().getGroupedFeatureParserRuleCall_2()); 
    }
    this_GroupedFeature_2=ruleGroupedFeature
    { 
        $current = $this_GroupedFeature_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFeatureAccess().getGroupedReferenceParserRuleCall_3()); 
    }
    this_GroupedReference_3=ruleGroupedReference
    { 
        $current = $this_GroupedReference_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleFeature_Impl
entryRuleFeature_Impl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeature_ImplRule()); }
	 iv_ruleFeature_Impl=ruleFeature_Impl 
	 { $current=$iv_ruleFeature_Impl.current; } 
	 EOF 
;

// Rule Feature_Impl
ruleFeature_Impl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='<fm:SolitaryFeature fm:value=' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFeature_ImplAccess().getFmSolitaryFeatureFmValueKeyword_0());
    }
(
(
		lv_name_1_0=RULE_STRING
		{
			newLeafNode(lv_name_1_0, grammarAccess.getFeature_ImplAccess().getNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeature_ImplRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='>' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFeature_ImplAccess().getGreaterThanSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFeature_ImplAccess().getAnnotationAnnotationParserRuleCall_3_0()); 
	    }
		lv_annotation_3_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeature_ImplRule());
	        }
       		add(
       			$current, 
       			"annotation",
        		lv_annotation_3_0, 
        		"Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getFeature_ImplAccess().getContainsRelationRelationshipParserRuleCall_4_0()); 
	    }
		lv_containsRelation_4_0=ruleRelationship		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeature_ImplRule());
	        }
       		add(
       			$current, 
       			"containsRelation",
        		lv_containsRelation_4_0, 
        		"Relationship");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getFeature_ImplAccess().getContainsFeatureFeatureParserRuleCall_5_0()); 
	    }
		lv_containsFeature_5_0=ruleFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeature_ImplRule());
	        }
       		add(
       			$current, 
       			"containsFeature",
        		lv_containsFeature_5_0, 
        		"Feature");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='</fm:SolitaryFeature>' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getFeature_ImplAccess().getFmSolitaryFeatureKeyword_6());
    }
)
;





// Entry rule entryRuleReferenceFeature
entryRuleReferenceFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReferenceFeatureRule()); }
	 iv_ruleReferenceFeature=ruleReferenceFeature 
	 { $current=$iv_ruleReferenceFeature.current; } 
	 EOF 
;

// Rule ReferenceFeature
ruleReferenceFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='<fm:SolitaryReference fm:value=' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getReferenceFeatureAccess().getFmSolitaryReferenceFmValueKeyword_0());
    }
(
(
		lv_name_1_0=RULE_STRING
		{
			newLeafNode(lv_name_1_0, grammarAccess.getReferenceFeatureAccess().getNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferenceFeatureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='>' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getReferenceFeatureAccess().getGreaterThanSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getReferenceFeatureAccess().getAnnotationAnnotationParserRuleCall_3_0()); 
	    }
		lv_annotation_3_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReferenceFeatureRule());
	        }
       		add(
       			$current, 
       			"annotation",
        		lv_annotation_3_0, 
        		"Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getReferenceFeatureAccess().getContainsRelationRelationshipParserRuleCall_4_0()); 
	    }
		lv_containsRelation_4_0=ruleRelationship		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReferenceFeatureRule());
	        }
       		add(
       			$current, 
       			"containsRelation",
        		lv_containsRelation_4_0, 
        		"Relationship");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getReferenceFeatureAccess().getContainsFeatureFeatureParserRuleCall_5_0()); 
	    }
		lv_containsFeature_5_0=ruleFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReferenceFeatureRule());
	        }
       		add(
       			$current, 
       			"containsFeature",
        		lv_containsFeature_5_0, 
        		"Feature");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='</fm:SolitaryReference>' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getReferenceFeatureAccess().getFmSolitaryReferenceKeyword_6());
    }
)
;





// Entry rule entryRuleGroupedFeature
entryRuleGroupedFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGroupedFeatureRule()); }
	 iv_ruleGroupedFeature=ruleGroupedFeature 
	 { $current=$iv_ruleGroupedFeature.current; } 
	 EOF 
;

// Rule GroupedFeature
ruleGroupedFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='<fm:GroupedFeature fm:value=' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGroupedFeatureAccess().getFmGroupedFeatureFmValueKeyword_0());
    }
(
(
		lv_name_1_0=RULE_STRING
		{
			newLeafNode(lv_name_1_0, grammarAccess.getGroupedFeatureAccess().getNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGroupedFeatureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='>' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGroupedFeatureAccess().getGreaterThanSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGroupedFeatureAccess().getContainsRelationRelationshipParserRuleCall_3_0()); 
	    }
		lv_containsRelation_3_0=ruleRelationship		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGroupedFeatureRule());
	        }
       		add(
       			$current, 
       			"containsRelation",
        		lv_containsRelation_3_0, 
        		"Relationship");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getGroupedFeatureAccess().getAnnotationAnnotationParserRuleCall_4_0()); 
	    }
		lv_annotation_4_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGroupedFeatureRule());
	        }
       		add(
       			$current, 
       			"annotation",
        		lv_annotation_4_0, 
        		"Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getGroupedFeatureAccess().getContainsFeatureFeatureParserRuleCall_5_0()); 
	    }
		lv_containsFeature_5_0=ruleFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGroupedFeatureRule());
	        }
       		add(
       			$current, 
       			"containsFeature",
        		lv_containsFeature_5_0, 
        		"Feature");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='</fm:GroupedFeature>' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getGroupedFeatureAccess().getFmGroupedFeatureKeyword_6());
    }
(	otherlv_7='</fm:FeatureGroup>' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getGroupedFeatureAccess().getFmFeatureGroupKeyword_7());
    }
)?)
;





// Entry rule entryRuleGroupedReference
entryRuleGroupedReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGroupedReferenceRule()); }
	 iv_ruleGroupedReference=ruleGroupedReference 
	 { $current=$iv_ruleGroupedReference.current; } 
	 EOF 
;

// Rule GroupedReference
ruleGroupedReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='<fm:GroupedReference fm:value=' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGroupedReferenceAccess().getFmGroupedReferenceFmValueKeyword_0());
    }
(
(
		lv_name_1_0=RULE_STRING
		{
			newLeafNode(lv_name_1_0, grammarAccess.getGroupedReferenceAccess().getNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGroupedReferenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='>' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGroupedReferenceAccess().getGreaterThanSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGroupedReferenceAccess().getContainsRelationRelationshipParserRuleCall_3_0()); 
	    }
		lv_containsRelation_3_0=ruleRelationship		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGroupedReferenceRule());
	        }
       		add(
       			$current, 
       			"containsRelation",
        		lv_containsRelation_3_0, 
        		"Relationship");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getGroupedReferenceAccess().getAnnotationAnnotationParserRuleCall_4_0()); 
	    }
		lv_annotation_4_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGroupedReferenceRule());
	        }
       		add(
       			$current, 
       			"annotation",
        		lv_annotation_4_0, 
        		"Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getGroupedReferenceAccess().getContainsFeatureFeatureParserRuleCall_5_0()); 
	    }
		lv_containsFeature_5_0=ruleFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGroupedReferenceRule());
	        }
       		add(
       			$current, 
       			"containsFeature",
        		lv_containsFeature_5_0, 
        		"Feature");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='</fm:GroupedReference>' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getGroupedReferenceAccess().getFmGroupedReferenceKeyword_6());
    }
(	otherlv_7='</fm:FeatureGroup>' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getGroupedReferenceAccess().getFmFeatureGroupKeyword_7());
    }
)?)
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


