/*
* generated by Xtext
*/

package org.xtext.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class PLAOVgraphGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class Aspect_Oriented_ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Aspect_Oriented_Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAspect_oriented_modelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cGoalmodelAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cGoalmodelGoal_ModelParserRuleCall_2_0 = (RuleCall)cGoalmodelAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Aspect_Oriented_Model:
		//	"aspect_oriented_model" "{" goalmodel+=Goal_Model+ "}" ";";
		public ParserRule getRule() { return rule; }

		//"aspect_oriented_model" "{" goalmodel+=Goal_Model+ "}" ";"
		public Group getGroup() { return cGroup; }

		//"aspect_oriented_model"
		public Keyword getAspect_oriented_modelKeyword_0() { return cAspect_oriented_modelKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//goalmodel+=Goal_Model+
		public Assignment getGoalmodelAssignment_2() { return cGoalmodelAssignment_2; }

		//Goal_Model
		public RuleCall getGoalmodelGoal_ModelParserRuleCall_2_0() { return cGoalmodelGoal_ModelParserRuleCall_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class Goal_ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Goal_Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGoal_modelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cPropertyKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cPropertyAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cPropertyPropertyParserRuleCall_3_2_0 = (RuleCall)cPropertyAssignment_3_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Assignment cElementAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cElementElementParserRuleCall_4_0 = (RuleCall)cElementAssignment_4.eContents().get(0);
		private final Assignment cRelationshipAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final Alternatives cRelationshipAlternatives_5_0 = (Alternatives)cRelationshipAssignment_5.eContents().get(0);
		private final RuleCall cRelationshipCorrelationParserRuleCall_5_0_0 = (RuleCall)cRelationshipAlternatives_5_0.eContents().get(0);
		private final RuleCall cRelationshipCrosscuttingParserRuleCall_5_0_1 = (RuleCall)cRelationshipAlternatives_5_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Goal_Model:
		//	"goal_model" name=STRING "{" ("property" "{" property+=Property+ "}")? element+=Element* relationship+=(Correlation |
		//	Crosscutting)* "}";
		public ParserRule getRule() { return rule; }

		//"goal_model" name=STRING "{" ("property" "{" property+=Property+ "}")? element+=Element* relationship+=(Correlation |
		//Crosscutting)* "}"
		public Group getGroup() { return cGroup; }

		//"goal_model"
		public Keyword getGoal_modelKeyword_0() { return cGoal_modelKeyword_0; }

		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("property" "{" property+=Property+ "}")?
		public Group getGroup_3() { return cGroup_3; }

		//"property"
		public Keyword getPropertyKeyword_3_0() { return cPropertyKeyword_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }

		//property+=Property+
		public Assignment getPropertyAssignment_3_2() { return cPropertyAssignment_3_2; }

		//Property
		public RuleCall getPropertyPropertyParserRuleCall_3_2_0() { return cPropertyPropertyParserRuleCall_3_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3_3() { return cRightCurlyBracketKeyword_3_3; }

		//element+=Element*
		public Assignment getElementAssignment_4() { return cElementAssignment_4; }

		//Element
		public RuleCall getElementElementParserRuleCall_4_0() { return cElementElementParserRuleCall_4_0; }

		//relationship+=(Correlation | Crosscutting)*
		public Assignment getRelationshipAssignment_5() { return cRelationshipAssignment_5; }

		//Correlation | Crosscutting
		public Alternatives getRelationshipAlternatives_5_0() { return cRelationshipAlternatives_5_0; }

		//Correlation
		public RuleCall getRelationshipCorrelationParserRuleCall_5_0_0() { return cRelationshipCorrelationParserRuleCall_5_0_0; }

		//Crosscutting
		public RuleCall getRelationshipCrosscuttingParserRuleCall_5_0_1() { return cRelationshipCrosscuttingParserRuleCall_5_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class ElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Element");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeElementTypesEnumRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRelationshipAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRelationshipContributionParserRuleCall_3_0 = (RuleCall)cRelationshipAssignment_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cPropertyKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cPropertyAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cPropertyPropertyParserRuleCall_6_2_0 = (RuleCall)cPropertyAssignment_6_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		private final Assignment cElementAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cElementElementParserRuleCall_7_0 = (RuleCall)cElementAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Element:
		//	type=ElementTypes name=STRING "(" relationship+=Contribution? ")" "{" ("property" "{" property+=Property+ "}")?
		//	element+=Element* "}";
		public ParserRule getRule() { return rule; }

		//type=ElementTypes name=STRING "(" relationship+=Contribution? ")" "{" ("property" "{" property+=Property+ "}")?
		//element+=Element* "}"
		public Group getGroup() { return cGroup; }

		//type=ElementTypes
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//ElementTypes
		public RuleCall getTypeElementTypesEnumRuleCall_0_0() { return cTypeElementTypesEnumRuleCall_0_0; }

		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//relationship+=Contribution?
		public Assignment getRelationshipAssignment_3() { return cRelationshipAssignment_3; }

		//Contribution
		public RuleCall getRelationshipContributionParserRuleCall_3_0() { return cRelationshipContributionParserRuleCall_3_0; }

		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//("property" "{" property+=Property+ "}")?
		public Group getGroup_6() { return cGroup_6; }

		//"property"
		public Keyword getPropertyKeyword_6_0() { return cPropertyKeyword_6_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }

		//property+=Property+
		public Assignment getPropertyAssignment_6_2() { return cPropertyAssignment_6_2; }

		//Property
		public RuleCall getPropertyPropertyParserRuleCall_6_2_0() { return cPropertyPropertyParserRuleCall_6_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6_3() { return cRightCurlyBracketKeyword_6_3; }

		//element+=Element*
		public Assignment getElementAssignment_7() { return cElementAssignment_7; }

		//Element
		public RuleCall getElementElementParserRuleCall_7_0() { return cElementElementParserRuleCall_7_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class PropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Property");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIsFeatureParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCardinalityParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cGroupFeatureParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cGeneric_PropertyParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Property:
		//	IsFeature | Cardinality | GroupFeature | Generic_Property;
		public ParserRule getRule() { return rule; }

		//IsFeature | Cardinality | GroupFeature | Generic_Property
		public Alternatives getAlternatives() { return cAlternatives; }

		//IsFeature
		public RuleCall getIsFeatureParserRuleCall_0() { return cIsFeatureParserRuleCall_0; }

		//Cardinality
		public RuleCall getCardinalityParserRuleCall_1() { return cCardinalityParserRuleCall_1; }

		//GroupFeature
		public RuleCall getGroupFeatureParserRuleCall_2() { return cGroupFeatureParserRuleCall_2; }

		//Generic_Property
		public RuleCall getGeneric_PropertyParserRuleCall_3() { return cGeneric_PropertyParserRuleCall_3; }
	}

	public class IsFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IsFeature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIsFeatureKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLabelAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLabelIsFeatureTypesEnumRuleCall_2_0 = (RuleCall)cLabelAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//IsFeature:
		//	"isFeature" "=" label=IsFeatureTypes ";";
		public ParserRule getRule() { return rule; }

		//"isFeature" "=" label=IsFeatureTypes ";"
		public Group getGroup() { return cGroup; }

		//"isFeature"
		public Keyword getIsFeatureKeyword_0() { return cIsFeatureKeyword_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//label=IsFeatureTypes
		public Assignment getLabelAssignment_2() { return cLabelAssignment_2; }

		//IsFeatureTypes
		public RuleCall getLabelIsFeatureTypesEnumRuleCall_2_0() { return cLabelIsFeatureTypesEnumRuleCall_2_0; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class CardinalityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Cardinality");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCardinalityMinKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCardinalityMinAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCardinalityMinEStringParserRuleCall_2_0 = (RuleCall)cCardinalityMinAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cCardinalityMaxKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cEqualsSignKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cCardinalityMaxAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cCardinalityMaxEStringParserRuleCall_6_0 = (RuleCall)cCardinalityMaxAssignment_6.eContents().get(0);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Cardinality:
		//	"cardinalityMin" "=" cardinalityMin=EString ";" "cardinalityMax" "=" cardinalityMax=EString ";";
		public ParserRule getRule() { return rule; }

		//"cardinalityMin" "=" cardinalityMin=EString ";" "cardinalityMax" "=" cardinalityMax=EString ";"
		public Group getGroup() { return cGroup; }

		//"cardinalityMin"
		public Keyword getCardinalityMinKeyword_0() { return cCardinalityMinKeyword_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//cardinalityMin=EString
		public Assignment getCardinalityMinAssignment_2() { return cCardinalityMinAssignment_2; }

		//EString
		public RuleCall getCardinalityMinEStringParserRuleCall_2_0() { return cCardinalityMinEStringParserRuleCall_2_0; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }

		//"cardinalityMax"
		public Keyword getCardinalityMaxKeyword_4() { return cCardinalityMaxKeyword_4; }

		//"="
		public Keyword getEqualsSignKeyword_5() { return cEqualsSignKeyword_5; }

		//cardinalityMax=EString
		public Assignment getCardinalityMaxAssignment_6() { return cCardinalityMaxAssignment_6; }

		//EString
		public RuleCall getCardinalityMaxEStringParserRuleCall_6_0() { return cCardinalityMaxEStringParserRuleCall_6_0; }

		//";"
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}

	public class GroupFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GroupFeature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGroupFeatureKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Keyword cTaskKeyword_3_0 = (Keyword)cAlternatives_3.eContents().get(0);
		private final Keyword cGoalKeyword_3_1 = (Keyword)cAlternatives_3.eContents().get(1);
		private final Keyword cSoftgoalKeyword_3_2 = (Keyword)cAlternatives_3.eContents().get(2);
		private final Assignment cSourceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cSourceElementCrossReference_4_0 = (CrossReference)cSourceAssignment_4.eContents().get(0);
		private final RuleCall cSourceElementSTRINGTerminalRuleCall_4_0_1 = (RuleCall)cSourceElementCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Alternatives cAlternatives_5_1 = (Alternatives)cGroup_5.eContents().get(1);
		private final Keyword cTaskKeyword_5_1_0 = (Keyword)cAlternatives_5_1.eContents().get(0);
		private final Keyword cGoalKeyword_5_1_1 = (Keyword)cAlternatives_5_1.eContents().get(1);
		private final Keyword cSoftgoalKeyword_5_1_2 = (Keyword)cAlternatives_5_1.eContents().get(2);
		private final Assignment cSourceAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final CrossReference cSourceElementCrossReference_5_2_0 = (CrossReference)cSourceAssignment_5_2.eContents().get(0);
		private final RuleCall cSourceElementSTRINGTerminalRuleCall_5_2_0_1 = (RuleCall)cSourceElementCrossReference_5_2_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cCardinalityGroupMinKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cEqualsSignKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cCardinalityGroupMinAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cCardinalityGroupMinEStringParserRuleCall_10_0 = (RuleCall)cCardinalityGroupMinAssignment_10.eContents().get(0);
		private final Keyword cSemicolonKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cCardinalityGroupMaxKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cEqualsSignKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cCardinalityGroupMaxAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cCardinalityGroupMaxEStringParserRuleCall_14_0 = (RuleCall)cCardinalityGroupMaxAssignment_14.eContents().get(0);
		private final Keyword cSemicolonKeyword_15 = (Keyword)cGroup.eContents().get(15);
		
		//GroupFeature:
		//	"groupFeature" "=" "(" ("task" | "goal" | "softgoal") source+=[Element|STRING] ("," ("task" | "goal" | "softgoal")
		//	source+=[Element|STRING])* ")" ";" "cardinalityGroupMin" "=" cardinalityGroupMin=EString ";" "cardinalityGroupMax" "="
		//	cardinalityGroupMax=EString ";";
		public ParserRule getRule() { return rule; }

		//"groupFeature" "=" "(" ("task" | "goal" | "softgoal") source+=[Element|STRING] ("," ("task" | "goal" | "softgoal")
		//source+=[Element|STRING])* ")" ";" "cardinalityGroupMin" "=" cardinalityGroupMin=EString ";" "cardinalityGroupMax" "="
		//cardinalityGroupMax=EString ";"
		public Group getGroup() { return cGroup; }

		//"groupFeature"
		public Keyword getGroupFeatureKeyword_0() { return cGroupFeatureKeyword_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//"task" | "goal" | "softgoal"
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//"task"
		public Keyword getTaskKeyword_3_0() { return cTaskKeyword_3_0; }

		//"goal"
		public Keyword getGoalKeyword_3_1() { return cGoalKeyword_3_1; }

		//"softgoal"
		public Keyword getSoftgoalKeyword_3_2() { return cSoftgoalKeyword_3_2; }

		//source+=[Element|STRING]
		public Assignment getSourceAssignment_4() { return cSourceAssignment_4; }

		//[Element|STRING]
		public CrossReference getSourceElementCrossReference_4_0() { return cSourceElementCrossReference_4_0; }

		//STRING
		public RuleCall getSourceElementSTRINGTerminalRuleCall_4_0_1() { return cSourceElementSTRINGTerminalRuleCall_4_0_1; }

		//("," ("task" | "goal" | "softgoal") source+=[Element|STRING])*
		public Group getGroup_5() { return cGroup_5; }

		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }

		//"task" | "goal" | "softgoal"
		public Alternatives getAlternatives_5_1() { return cAlternatives_5_1; }

		//"task"
		public Keyword getTaskKeyword_5_1_0() { return cTaskKeyword_5_1_0; }

		//"goal"
		public Keyword getGoalKeyword_5_1_1() { return cGoalKeyword_5_1_1; }

		//"softgoal"
		public Keyword getSoftgoalKeyword_5_1_2() { return cSoftgoalKeyword_5_1_2; }

		//source+=[Element|STRING]
		public Assignment getSourceAssignment_5_2() { return cSourceAssignment_5_2; }

		//[Element|STRING]
		public CrossReference getSourceElementCrossReference_5_2_0() { return cSourceElementCrossReference_5_2_0; }

		//STRING
		public RuleCall getSourceElementSTRINGTerminalRuleCall_5_2_0_1() { return cSourceElementSTRINGTerminalRuleCall_5_2_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }

		//";"
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }

		//"cardinalityGroupMin"
		public Keyword getCardinalityGroupMinKeyword_8() { return cCardinalityGroupMinKeyword_8; }

		//"="
		public Keyword getEqualsSignKeyword_9() { return cEqualsSignKeyword_9; }

		//cardinalityGroupMin=EString
		public Assignment getCardinalityGroupMinAssignment_10() { return cCardinalityGroupMinAssignment_10; }

		//EString
		public RuleCall getCardinalityGroupMinEStringParserRuleCall_10_0() { return cCardinalityGroupMinEStringParserRuleCall_10_0; }

		//";"
		public Keyword getSemicolonKeyword_11() { return cSemicolonKeyword_11; }

		//"cardinalityGroupMax"
		public Keyword getCardinalityGroupMaxKeyword_12() { return cCardinalityGroupMaxKeyword_12; }

		//"="
		public Keyword getEqualsSignKeyword_13() { return cEqualsSignKeyword_13; }

		//cardinalityGroupMax=EString
		public Assignment getCardinalityGroupMaxAssignment_14() { return cCardinalityGroupMaxAssignment_14; }

		//EString
		public RuleCall getCardinalityGroupMaxEStringParserRuleCall_14_0() { return cCardinalityGroupMaxEStringParserRuleCall_14_0; }

		//";"
		public Keyword getSemicolonKeyword_15() { return cSemicolonKeyword_15; }
	}

	public class Generic_PropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Generic_Property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueIDTerminalRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Generic_Property:
		//	name=ID "=" value=ID ";";
		public ParserRule getRule() { return rule; }

		//name=ID "=" value=ID ";"
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//value=ID
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//ID
		public RuleCall getValueIDTerminalRuleCall_2_0() { return cValueIDTerminalRuleCall_2_0; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class ContributionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Contribution");
		private final Assignment cLabelAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cLabelDecompositionCategoryEnumRuleCall_0 = (RuleCall)cLabelAssignment.eContents().get(0);
		
		//Contribution:
		//	label=DecompositionCategory;
		public ParserRule getRule() { return rule; }

		//label=DecompositionCategory
		public Assignment getLabelAssignment() { return cLabelAssignment; }

		//DecompositionCategory
		public RuleCall getLabelDecompositionCategoryEnumRuleCall_0() { return cLabelDecompositionCategoryEnumRuleCall_0; }
	}

	public class CorrelationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Correlation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCorrelationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLabelAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLabelCorrelationCategoryEnumRuleCall_2_0 = (RuleCall)cLabelAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cSourceKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Alternatives cAlternatives_7 = (Alternatives)cGroup.eContents().get(7);
		private final Keyword cTask_refKeyword_7_0 = (Keyword)cAlternatives_7.eContents().get(0);
		private final Keyword cGoal_refKeyword_7_1 = (Keyword)cAlternatives_7.eContents().get(1);
		private final Keyword cSoftgoal_refKeyword_7_2 = (Keyword)cAlternatives_7.eContents().get(2);
		private final Assignment cSourceAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cSourceElementCrossReference_8_0 = (CrossReference)cSourceAssignment_8.eContents().get(0);
		private final RuleCall cSourceElementSTRINGTerminalRuleCall_8_0_1 = (RuleCall)cSourceElementCrossReference_8_0.eContents().get(1);
		private final Keyword cTargetKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cColonKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Alternatives cAlternatives_11 = (Alternatives)cGroup.eContents().get(11);
		private final Keyword cTask_refKeyword_11_0 = (Keyword)cAlternatives_11.eContents().get(0);
		private final Keyword cGoal_refKeyword_11_1 = (Keyword)cAlternatives_11.eContents().get(1);
		private final Keyword cSoftgoal_refKeyword_11_2 = (Keyword)cAlternatives_11.eContents().get(2);
		private final Assignment cTargetAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final CrossReference cTargetElementCrossReference_12_0 = (CrossReference)cTargetAssignment_12.eContents().get(0);
		private final RuleCall cTargetElementSTRINGTerminalRuleCall_12_0_1 = (RuleCall)cTargetElementCrossReference_12_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//Correlation:
		//	"correlation" "(" label=CorrelationCategory ")" "{" "source" ":" ("task_ref" | "goal_ref" | "softgoal_ref")
		//	source=[Element|STRING] "target" ":" ("task_ref" | "goal_ref" | "softgoal_ref") target=[Element|STRING] "}";
		public ParserRule getRule() { return rule; }

		//"correlation" "(" label=CorrelationCategory ")" "{" "source" ":" ("task_ref" | "goal_ref" | "softgoal_ref")
		//source=[Element|STRING] "target" ":" ("task_ref" | "goal_ref" | "softgoal_ref") target=[Element|STRING] "}"
		public Group getGroup() { return cGroup; }

		//"correlation"
		public Keyword getCorrelationKeyword_0() { return cCorrelationKeyword_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }

		//label=CorrelationCategory
		public Assignment getLabelAssignment_2() { return cLabelAssignment_2; }

		//CorrelationCategory
		public RuleCall getLabelCorrelationCategoryEnumRuleCall_2_0() { return cLabelCorrelationCategoryEnumRuleCall_2_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//"source"
		public Keyword getSourceKeyword_5() { return cSourceKeyword_5; }

		//":"
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }

		//"task_ref" | "goal_ref" | "softgoal_ref"
		public Alternatives getAlternatives_7() { return cAlternatives_7; }

		//"task_ref"
		public Keyword getTask_refKeyword_7_0() { return cTask_refKeyword_7_0; }

		//"goal_ref"
		public Keyword getGoal_refKeyword_7_1() { return cGoal_refKeyword_7_1; }

		//"softgoal_ref"
		public Keyword getSoftgoal_refKeyword_7_2() { return cSoftgoal_refKeyword_7_2; }

		//source=[Element|STRING]
		public Assignment getSourceAssignment_8() { return cSourceAssignment_8; }

		//[Element|STRING]
		public CrossReference getSourceElementCrossReference_8_0() { return cSourceElementCrossReference_8_0; }

		//STRING
		public RuleCall getSourceElementSTRINGTerminalRuleCall_8_0_1() { return cSourceElementSTRINGTerminalRuleCall_8_0_1; }

		//"target"
		public Keyword getTargetKeyword_9() { return cTargetKeyword_9; }

		//":"
		public Keyword getColonKeyword_10() { return cColonKeyword_10; }

		//"task_ref" | "goal_ref" | "softgoal_ref"
		public Alternatives getAlternatives_11() { return cAlternatives_11; }

		//"task_ref"
		public Keyword getTask_refKeyword_11_0() { return cTask_refKeyword_11_0; }

		//"goal_ref"
		public Keyword getGoal_refKeyword_11_1() { return cGoal_refKeyword_11_1; }

		//"softgoal_ref"
		public Keyword getSoftgoal_refKeyword_11_2() { return cSoftgoal_refKeyword_11_2; }

		//target=[Element|STRING]
		public Assignment getTargetAssignment_12() { return cTargetAssignment_12; }

		//[Element|STRING]
		public CrossReference getTargetElementCrossReference_12_0() { return cTargetElementCrossReference_12_0; }

		//STRING
		public RuleCall getTargetElementSTRINGTerminalRuleCall_12_0_1() { return cTargetElementSTRINGTerminalRuleCall_12_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}

	public class CrosscuttingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Crosscutting");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCrosscuttingKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cSourceKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Keyword cTask_refKeyword_4_0 = (Keyword)cAlternatives_4.eContents().get(0);
		private final Keyword cGoal_refKeyword_4_1 = (Keyword)cAlternatives_4.eContents().get(1);
		private final Keyword cSoftgoal_refKeyword_4_2 = (Keyword)cAlternatives_4.eContents().get(2);
		private final Assignment cSourceAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cSourceElementCrossReference_5_0 = (CrossReference)cSourceAssignment_5.eContents().get(0);
		private final RuleCall cSourceElementSTRINGTerminalRuleCall_5_0_1 = (RuleCall)cSourceElementCrossReference_5_0.eContents().get(1);
		private final Assignment cPointcutAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cPointcutPointcutParserRuleCall_6_0 = (RuleCall)cPointcutAssignment_6.eContents().get(0);
		private final Assignment cPointcutAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cPointcutPointcutParserRuleCall_7_0 = (RuleCall)cPointcutAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Assignment cAdviceAssignment_8_0 = (Assignment)cGroup_8.eContents().get(0);
		private final RuleCall cAdviceAdviceParserRuleCall_8_0_0 = (RuleCall)cAdviceAssignment_8_0.eContents().get(0);
		private final Assignment cAdviceAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cAdviceAdviceParserRuleCall_8_1_0 = (RuleCall)cAdviceAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Assignment cIntertypeAssignment_9_0 = (Assignment)cGroup_9.eContents().get(0);
		private final RuleCall cIntertypeIntertypeDeclarationParserRuleCall_9_0_0 = (RuleCall)cIntertypeAssignment_9_0.eContents().get(0);
		private final Assignment cIntertypeAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cIntertypeIntertypeDeclarationParserRuleCall_9_1_0 = (RuleCall)cIntertypeAssignment_9_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Crosscutting:
		//	"crosscutting" "{" "source" ":" ("task_ref" | "goal_ref" | "softgoal_ref") source=[Element|STRING] pointcut+=Pointcut
		//	pointcut+=Pointcut* (advice+=Advice advice+=Advice*)? (intertype+=IntertypeDeclaration
		//	intertype+=IntertypeDeclaration*)? "}";
		public ParserRule getRule() { return rule; }

		//"crosscutting" "{" "source" ":" ("task_ref" | "goal_ref" | "softgoal_ref") source=[Element|STRING] pointcut+=Pointcut
		//pointcut+=Pointcut* (advice+=Advice advice+=Advice*)? (intertype+=IntertypeDeclaration
		//intertype+=IntertypeDeclaration*)? "}"
		public Group getGroup() { return cGroup; }

		//"crosscutting"
		public Keyword getCrosscuttingKeyword_0() { return cCrosscuttingKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"source"
		public Keyword getSourceKeyword_2() { return cSourceKeyword_2; }

		//":"
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }

		//"task_ref" | "goal_ref" | "softgoal_ref"
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//"task_ref"
		public Keyword getTask_refKeyword_4_0() { return cTask_refKeyword_4_0; }

		//"goal_ref"
		public Keyword getGoal_refKeyword_4_1() { return cGoal_refKeyword_4_1; }

		//"softgoal_ref"
		public Keyword getSoftgoal_refKeyword_4_2() { return cSoftgoal_refKeyword_4_2; }

		//source=[Element|STRING]
		public Assignment getSourceAssignment_5() { return cSourceAssignment_5; }

		//[Element|STRING]
		public CrossReference getSourceElementCrossReference_5_0() { return cSourceElementCrossReference_5_0; }

		//STRING
		public RuleCall getSourceElementSTRINGTerminalRuleCall_5_0_1() { return cSourceElementSTRINGTerminalRuleCall_5_0_1; }

		//pointcut+=Pointcut
		public Assignment getPointcutAssignment_6() { return cPointcutAssignment_6; }

		//Pointcut
		public RuleCall getPointcutPointcutParserRuleCall_6_0() { return cPointcutPointcutParserRuleCall_6_0; }

		//pointcut+=Pointcut*
		public Assignment getPointcutAssignment_7() { return cPointcutAssignment_7; }

		//Pointcut
		public RuleCall getPointcutPointcutParserRuleCall_7_0() { return cPointcutPointcutParserRuleCall_7_0; }

		//(advice+=Advice advice+=Advice*)?
		public Group getGroup_8() { return cGroup_8; }

		//advice+=Advice
		public Assignment getAdviceAssignment_8_0() { return cAdviceAssignment_8_0; }

		//Advice
		public RuleCall getAdviceAdviceParserRuleCall_8_0_0() { return cAdviceAdviceParserRuleCall_8_0_0; }

		//advice+=Advice*
		public Assignment getAdviceAssignment_8_1() { return cAdviceAssignment_8_1; }

		//Advice
		public RuleCall getAdviceAdviceParserRuleCall_8_1_0() { return cAdviceAdviceParserRuleCall_8_1_0; }

		//(intertype+=IntertypeDeclaration intertype+=IntertypeDeclaration*)?
		public Group getGroup_9() { return cGroup_9; }

		//intertype+=IntertypeDeclaration
		public Assignment getIntertypeAssignment_9_0() { return cIntertypeAssignment_9_0; }

		//IntertypeDeclaration
		public RuleCall getIntertypeIntertypeDeclarationParserRuleCall_9_0_0() { return cIntertypeIntertypeDeclarationParserRuleCall_9_0_0; }

		//intertype+=IntertypeDeclaration*
		public Assignment getIntertypeAssignment_9_1() { return cIntertypeAssignment_9_1; }

		//IntertypeDeclaration
		public RuleCall getIntertypeIntertypeDeclarationParserRuleCall_9_1_0() { return cIntertypeIntertypeDeclarationParserRuleCall_9_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}

	public class PointcutElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Pointcut");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPointcutKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOperandAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOperandOperandParserRuleCall_3_0 = (RuleCall)cOperandAssignment_3.eContents().get(0);
		private final Assignment cOperandAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOperandOperand2ParserRuleCall_4_0 = (RuleCall)cOperandAssignment_4.eContents().get(0);
		
		//Pointcut:
		//	"pointcut" name=ID ":" operand+=Operand operand+=Operand2*;
		public ParserRule getRule() { return rule; }

		//"pointcut" name=ID ":" operand+=Operand operand+=Operand2*
		public Group getGroup() { return cGroup; }

		//"pointcut"
		public Keyword getPointcutKeyword_0() { return cPointcutKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//operand+=Operand
		public Assignment getOperandAssignment_3() { return cOperandAssignment_3; }

		//Operand
		public RuleCall getOperandOperandParserRuleCall_3_0() { return cOperandOperandParserRuleCall_3_0; }

		//operand+=Operand2*
		public Assignment getOperandAssignment_4() { return cOperandAssignment_4; }

		//Operand2
		public RuleCall getOperandOperand2ParserRuleCall_4_0() { return cOperandOperand2ParserRuleCall_4_0; }
	}

	public class OperandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Operand");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPrimitiveAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPrimitivePrimitiveTypesEnumRuleCall_0_0 = (RuleCall)cPrimitiveAssignment_0.eContents().get(0);
		private final Assignment cJoinpointPointcutAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cJoinpointPointcutElementCrossReference_1_0 = (CrossReference)cJoinpointPointcutAssignment_1.eContents().get(0);
		private final RuleCall cJoinpointPointcutElementSTRINGTerminalRuleCall_1_0_1 = (RuleCall)cJoinpointPointcutElementCrossReference_1_0.eContents().get(1);
		
		//Operand:
		//	primitive=PrimitiveTypes joinpointPointcut=[Element|STRING];
		public ParserRule getRule() { return rule; }

		//primitive=PrimitiveTypes joinpointPointcut=[Element|STRING]
		public Group getGroup() { return cGroup; }

		//primitive=PrimitiveTypes
		public Assignment getPrimitiveAssignment_0() { return cPrimitiveAssignment_0; }

		//PrimitiveTypes
		public RuleCall getPrimitivePrimitiveTypesEnumRuleCall_0_0() { return cPrimitivePrimitiveTypesEnumRuleCall_0_0; }

		//joinpointPointcut=[Element|STRING]
		public Assignment getJoinpointPointcutAssignment_1() { return cJoinpointPointcutAssignment_1; }

		//[Element|STRING]
		public CrossReference getJoinpointPointcutElementCrossReference_1_0() { return cJoinpointPointcutElementCrossReference_1_0; }

		//STRING
		public RuleCall getJoinpointPointcutElementSTRINGTerminalRuleCall_1_0_1() { return cJoinpointPointcutElementSTRINGTerminalRuleCall_1_0_1; }
	}

	public class Operand2Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Operand2");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOperatorAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOperatorOperatorParserRuleCall_0_0 = (RuleCall)cOperatorAssignment_0.eContents().get(0);
		private final Assignment cPrimitiveAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPrimitivePrimitiveTypesEnumRuleCall_1_0 = (RuleCall)cPrimitiveAssignment_1.eContents().get(0);
		private final Assignment cJoinpointPointcutAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cJoinpointPointcutElementCrossReference_2_0 = (CrossReference)cJoinpointPointcutAssignment_2.eContents().get(0);
		private final RuleCall cJoinpointPointcutElementSTRINGTerminalRuleCall_2_0_1 = (RuleCall)cJoinpointPointcutElementCrossReference_2_0.eContents().get(1);
		
		//Operand2 returns Operand:
		//	operator=Operator primitive=PrimitiveTypes joinpointPointcut=[Element|STRING];
		public ParserRule getRule() { return rule; }

		//operator=Operator primitive=PrimitiveTypes joinpointPointcut=[Element|STRING]
		public Group getGroup() { return cGroup; }

		//operator=Operator
		public Assignment getOperatorAssignment_0() { return cOperatorAssignment_0; }

		//Operator
		public RuleCall getOperatorOperatorParserRuleCall_0_0() { return cOperatorOperatorParserRuleCall_0_0; }

		//primitive=PrimitiveTypes
		public Assignment getPrimitiveAssignment_1() { return cPrimitiveAssignment_1; }

		//PrimitiveTypes
		public RuleCall getPrimitivePrimitiveTypesEnumRuleCall_1_0() { return cPrimitivePrimitiveTypesEnumRuleCall_1_0; }

		//joinpointPointcut=[Element|STRING]
		public Assignment getJoinpointPointcutAssignment_2() { return cJoinpointPointcutAssignment_2; }

		//[Element|STRING]
		public CrossReference getJoinpointPointcutElementCrossReference_2_0() { return cJoinpointPointcutElementCrossReference_2_0; }

		//STRING
		public RuleCall getJoinpointPointcutElementSTRINGTerminalRuleCall_2_0_1() { return cJoinpointPointcutElementSTRINGTerminalRuleCall_2_0_1; }
	}

	public class OperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Operator");
		private final Assignment cOperatorAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOperatorOperatorTypesEnumRuleCall_0 = (RuleCall)cOperatorAssignment.eContents().get(0);
		
		//Operator:
		//	operator=OperatorTypes;
		public ParserRule getRule() { return rule; }

		//operator=OperatorTypes
		public Assignment getOperatorAssignment() { return cOperatorAssignment; }

		//OperatorTypes
		public RuleCall getOperatorOperatorTypesEnumRuleCall_0() { return cOperatorOperatorTypesEnumRuleCall_0; }
	}

	public class AdviceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Advice");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAdviceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypeAdviceCategoryEnumRuleCall_2_0 = (RuleCall)cTypeAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cIdPointcutAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cIdPointcutPointcutCrossReference_5_0 = (CrossReference)cIdPointcutAssignment_5.eContents().get(0);
		private final RuleCall cIdPointcutPointcutIDTerminalRuleCall_5_0_1 = (RuleCall)cIdPointcutPointcutCrossReference_5_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cAndKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cIdPointcutAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cIdPointcutPointcutCrossReference_6_1_0 = (CrossReference)cIdPointcutAssignment_6_1.eContents().get(0);
		private final RuleCall cIdPointcutPointcutIDTerminalRuleCall_6_1_0_1 = (RuleCall)cIdPointcutPointcutCrossReference_6_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Alternatives cAlternatives_8_0 = (Alternatives)cGroup_8.eContents().get(0);
		private final Keyword cTask_refKeyword_8_0_0 = (Keyword)cAlternatives_8_0.eContents().get(0);
		private final Keyword cGoal_refKeyword_8_0_1 = (Keyword)cAlternatives_8_0.eContents().get(1);
		private final Keyword cSoftgoal_refKeyword_8_0_2 = (Keyword)cAlternatives_8_0.eContents().get(2);
		private final Assignment cJoinpointAdviceAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final CrossReference cJoinpointAdviceElementCrossReference_8_1_0 = (CrossReference)cJoinpointAdviceAssignment_8_1.eContents().get(0);
		private final RuleCall cJoinpointAdviceElementSTRINGTerminalRuleCall_8_1_0_1 = (RuleCall)cJoinpointAdviceElementCrossReference_8_1_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_8_2 = (Keyword)cGroup_8.eContents().get(2);
		private final Alternatives cAlternatives_8_3 = (Alternatives)cGroup_8.eContents().get(3);
		private final Keyword cAndKeyword_8_3_0 = (Keyword)cAlternatives_8_3.eContents().get(0);
		private final Keyword cOrKeyword_8_3_1 = (Keyword)cAlternatives_8_3.eContents().get(1);
		private final Keyword cXorKeyword_8_3_2 = (Keyword)cAlternatives_8_3.eContents().get(2);
		private final Keyword cIncOrKeyword_8_3_3 = (Keyword)cAlternatives_8_3.eContents().get(3);
		private final Keyword cRightParenthesisKeyword_8_4 = (Keyword)cGroup_8.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Advice:
		//	"advice" "(" type=AdviceCategory ")" ":" idPointcut+=[Pointcut] ("and" idPointcut+=[Pointcut])* "{" (("task_ref" |
		//	"goal_ref" | "softgoal_ref") joinpointAdvice+=[Element|STRING] "(" ("and" | "or" | "xor" | "inc-or")? ")")+ "}";
		public ParserRule getRule() { return rule; }

		//"advice" "(" type=AdviceCategory ")" ":" idPointcut+=[Pointcut] ("and" idPointcut+=[Pointcut])* "{" (("task_ref" |
		//"goal_ref" | "softgoal_ref") joinpointAdvice+=[Element|STRING] "(" ("and" | "or" | "xor" | "inc-or")? ")")+ "}"
		public Group getGroup() { return cGroup; }

		//"advice"
		public Keyword getAdviceKeyword_0() { return cAdviceKeyword_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }

		//type=AdviceCategory
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }

		//AdviceCategory
		public RuleCall getTypeAdviceCategoryEnumRuleCall_2_0() { return cTypeAdviceCategoryEnumRuleCall_2_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }

		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }

		//idPointcut+=[Pointcut]
		public Assignment getIdPointcutAssignment_5() { return cIdPointcutAssignment_5; }

		//[Pointcut]
		public CrossReference getIdPointcutPointcutCrossReference_5_0() { return cIdPointcutPointcutCrossReference_5_0; }

		//ID
		public RuleCall getIdPointcutPointcutIDTerminalRuleCall_5_0_1() { return cIdPointcutPointcutIDTerminalRuleCall_5_0_1; }

		//("and" idPointcut+=[Pointcut])*
		public Group getGroup_6() { return cGroup_6; }

		//"and"
		public Keyword getAndKeyword_6_0() { return cAndKeyword_6_0; }

		//idPointcut+=[Pointcut]
		public Assignment getIdPointcutAssignment_6_1() { return cIdPointcutAssignment_6_1; }

		//[Pointcut]
		public CrossReference getIdPointcutPointcutCrossReference_6_1_0() { return cIdPointcutPointcutCrossReference_6_1_0; }

		//ID
		public RuleCall getIdPointcutPointcutIDTerminalRuleCall_6_1_0_1() { return cIdPointcutPointcutIDTerminalRuleCall_6_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_7() { return cLeftCurlyBracketKeyword_7; }

		//(("task_ref" | "goal_ref" | "softgoal_ref") joinpointAdvice+=[Element|STRING] "(" ("and" | "or" | "xor" | "inc-or")?
		//")")+
		public Group getGroup_8() { return cGroup_8; }

		//"task_ref" | "goal_ref" | "softgoal_ref"
		public Alternatives getAlternatives_8_0() { return cAlternatives_8_0; }

		//"task_ref"
		public Keyword getTask_refKeyword_8_0_0() { return cTask_refKeyword_8_0_0; }

		//"goal_ref"
		public Keyword getGoal_refKeyword_8_0_1() { return cGoal_refKeyword_8_0_1; }

		//"softgoal_ref"
		public Keyword getSoftgoal_refKeyword_8_0_2() { return cSoftgoal_refKeyword_8_0_2; }

		//joinpointAdvice+=[Element|STRING]
		public Assignment getJoinpointAdviceAssignment_8_1() { return cJoinpointAdviceAssignment_8_1; }

		//[Element|STRING]
		public CrossReference getJoinpointAdviceElementCrossReference_8_1_0() { return cJoinpointAdviceElementCrossReference_8_1_0; }

		//STRING
		public RuleCall getJoinpointAdviceElementSTRINGTerminalRuleCall_8_1_0_1() { return cJoinpointAdviceElementSTRINGTerminalRuleCall_8_1_0_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_8_2() { return cLeftParenthesisKeyword_8_2; }

		//("and" | "or" | "xor" | "inc-or")?
		public Alternatives getAlternatives_8_3() { return cAlternatives_8_3; }

		//"and"
		public Keyword getAndKeyword_8_3_0() { return cAndKeyword_8_3_0; }

		//"or"
		public Keyword getOrKeyword_8_3_1() { return cOrKeyword_8_3_1; }

		//"xor"
		public Keyword getXorKeyword_8_3_2() { return cXorKeyword_8_3_2; }

		//"inc-or"
		public Keyword getIncOrKeyword_8_3_3() { return cIncOrKeyword_8_3_3; }

		//")"
		public Keyword getRightParenthesisKeyword_8_4() { return cRightParenthesisKeyword_8_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}

	public class IntertypeDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IntertypeDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIntertypeDeclarationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypeIntertypeCategoryEnumRuleCall_2_0 = (RuleCall)cTypeAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cIdPointcutAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cIdPointcutPointcutCrossReference_5_0 = (CrossReference)cIdPointcutAssignment_5.eContents().get(0);
		private final RuleCall cIdPointcutPointcutIDTerminalRuleCall_5_0_1 = (RuleCall)cIdPointcutPointcutCrossReference_5_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cAndKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cIdPointcutAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cIdPointcutPointcutCrossReference_6_1_0 = (CrossReference)cIdPointcutAssignment_6_1.eContents().get(0);
		private final RuleCall cIdPointcutPointcutIDTerminalRuleCall_6_1_0_1 = (RuleCall)cIdPointcutPointcutCrossReference_6_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Alternatives cAlternatives_8 = (Alternatives)cGroup.eContents().get(8);
		private final Assignment cNewElementAssignment_8_0 = (Assignment)cAlternatives_8.eContents().get(0);
		private final RuleCall cNewElementElementParserRuleCall_8_0_0 = (RuleCall)cNewElementAssignment_8_0.eContents().get(0);
		private final Assignment cNewAttributeAssignment_8_1 = (Assignment)cAlternatives_8.eContents().get(1);
		private final RuleCall cNewAttributeAttributeParserRuleCall_8_1_0 = (RuleCall)cNewAttributeAssignment_8_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//IntertypeDeclaration:
		//	"intertype declaration" "(" type=IntertypeCategory ")" ":" idPointcut+=[Pointcut] ("and" idPointcut+=[Pointcut])* "{"
		//	(newElement+=Element | newAttribute+=Attribute)+ "}";
		public ParserRule getRule() { return rule; }

		//"intertype declaration" "(" type=IntertypeCategory ")" ":" idPointcut+=[Pointcut] ("and" idPointcut+=[Pointcut])* "{"
		//(newElement+=Element | newAttribute+=Attribute)+ "}"
		public Group getGroup() { return cGroup; }

		//"intertype declaration"
		public Keyword getIntertypeDeclarationKeyword_0() { return cIntertypeDeclarationKeyword_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }

		//type=IntertypeCategory
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }

		//IntertypeCategory
		public RuleCall getTypeIntertypeCategoryEnumRuleCall_2_0() { return cTypeIntertypeCategoryEnumRuleCall_2_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }

		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }

		//idPointcut+=[Pointcut]
		public Assignment getIdPointcutAssignment_5() { return cIdPointcutAssignment_5; }

		//[Pointcut]
		public CrossReference getIdPointcutPointcutCrossReference_5_0() { return cIdPointcutPointcutCrossReference_5_0; }

		//ID
		public RuleCall getIdPointcutPointcutIDTerminalRuleCall_5_0_1() { return cIdPointcutPointcutIDTerminalRuleCall_5_0_1; }

		//("and" idPointcut+=[Pointcut])*
		public Group getGroup_6() { return cGroup_6; }

		//"and"
		public Keyword getAndKeyword_6_0() { return cAndKeyword_6_0; }

		//idPointcut+=[Pointcut]
		public Assignment getIdPointcutAssignment_6_1() { return cIdPointcutAssignment_6_1; }

		//[Pointcut]
		public CrossReference getIdPointcutPointcutCrossReference_6_1_0() { return cIdPointcutPointcutCrossReference_6_1_0; }

		//ID
		public RuleCall getIdPointcutPointcutIDTerminalRuleCall_6_1_0_1() { return cIdPointcutPointcutIDTerminalRuleCall_6_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_7() { return cLeftCurlyBracketKeyword_7; }

		//(newElement+=Element | newAttribute+=Attribute)+
		public Alternatives getAlternatives_8() { return cAlternatives_8; }

		//newElement+=Element
		public Assignment getNewElementAssignment_8_0() { return cNewElementAssignment_8_0; }

		//Element
		public RuleCall getNewElementElementParserRuleCall_8_0_0() { return cNewElementElementParserRuleCall_8_0_0; }

		//newAttribute+=Attribute
		public Assignment getNewAttributeAssignment_8_1() { return cNewAttributeAssignment_8_1; }

		//Attribute
		public RuleCall getNewAttributeAttributeParserRuleCall_8_1_0() { return cNewAttributeAttributeParserRuleCall_8_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}

	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeSTRINGTerminalRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueSTRINGTerminalRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//Attribute:
		//	type=STRING "=" value=STRING;
		public ParserRule getRule() { return rule; }

		//type=STRING "=" value=STRING
		public Group getGroup() { return cGroup; }

		//type=STRING
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//STRING
		public RuleCall getTypeSTRINGTerminalRuleCall_0_0() { return cTypeSTRINGTerminalRuleCall_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//value=STRING
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_2_0() { return cValueSTRINGTerminalRuleCall_2_0; }
	}

	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//	ID | INT;
		public ParserRule getRule() { return rule; }

		//ID | INT
		public Alternatives getAlternatives() { return cAlternatives; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	
	
	public class ElementTypesElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ElementTypes");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cTaskEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cTaskTaskKeyword_0_0 = (Keyword)cTaskEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cGoalEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cGoalGoalKeyword_1_0 = (Keyword)cGoalEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cSoftgoalEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cSoftgoalSoftgoalKeyword_2_0 = (Keyword)cSoftgoalEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cTask_refEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cTask_refTask_refKeyword_3_0 = (Keyword)cTask_refEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cGoal_refEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cGoal_refGoal_refKeyword_4_0 = (Keyword)cGoal_refEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cSoftgoal_refEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cSoftgoal_refSoftgoal_refKeyword_5_0 = (Keyword)cSoftgoal_refEnumLiteralDeclaration_5.eContents().get(0);
		
		//enum ElementTypes:
		//	task | goal | softgoal | task_ref | goal_ref | softgoal_ref;
		public EnumRule getRule() { return rule; }

		//task | goal | softgoal | task_ref | goal_ref | softgoal_ref
		public Alternatives getAlternatives() { return cAlternatives; }

		//task
		public EnumLiteralDeclaration getTaskEnumLiteralDeclaration_0() { return cTaskEnumLiteralDeclaration_0; }

		//"task"
		public Keyword getTaskTaskKeyword_0_0() { return cTaskTaskKeyword_0_0; }

		//goal
		public EnumLiteralDeclaration getGoalEnumLiteralDeclaration_1() { return cGoalEnumLiteralDeclaration_1; }

		//"goal"
		public Keyword getGoalGoalKeyword_1_0() { return cGoalGoalKeyword_1_0; }

		//softgoal
		public EnumLiteralDeclaration getSoftgoalEnumLiteralDeclaration_2() { return cSoftgoalEnumLiteralDeclaration_2; }

		//"softgoal"
		public Keyword getSoftgoalSoftgoalKeyword_2_0() { return cSoftgoalSoftgoalKeyword_2_0; }

		//task_ref
		public EnumLiteralDeclaration getTask_refEnumLiteralDeclaration_3() { return cTask_refEnumLiteralDeclaration_3; }

		//"task_ref"
		public Keyword getTask_refTask_refKeyword_3_0() { return cTask_refTask_refKeyword_3_0; }

		//goal_ref
		public EnumLiteralDeclaration getGoal_refEnumLiteralDeclaration_4() { return cGoal_refEnumLiteralDeclaration_4; }

		//"goal_ref"
		public Keyword getGoal_refGoal_refKeyword_4_0() { return cGoal_refGoal_refKeyword_4_0; }

		//softgoal_ref
		public EnumLiteralDeclaration getSoftgoal_refEnumLiteralDeclaration_5() { return cSoftgoal_refEnumLiteralDeclaration_5; }

		//"softgoal_ref"
		public Keyword getSoftgoal_refSoftgoal_refKeyword_5_0() { return cSoftgoal_refSoftgoal_refKeyword_5_0; }
	}

	public class IsFeatureTypesElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "IsFeatureTypes");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cNoEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cNoNoKeyword_0_0 = (Keyword)cNoEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cYesEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cYesYesKeyword_1_0 = (Keyword)cYesEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum IsFeatureTypes:
		//	no | yes;
		public EnumRule getRule() { return rule; }

		//no | yes
		public Alternatives getAlternatives() { return cAlternatives; }

		//no
		public EnumLiteralDeclaration getNoEnumLiteralDeclaration_0() { return cNoEnumLiteralDeclaration_0; }

		//"no"
		public Keyword getNoNoKeyword_0_0() { return cNoNoKeyword_0_0; }

		//yes
		public EnumLiteralDeclaration getYesEnumLiteralDeclaration_1() { return cYesEnumLiteralDeclaration_1; }

		//"yes"
		public Keyword getYesYesKeyword_1_0() { return cYesYesKeyword_1_0; }
	}

	public class DecompositionCategoryElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "DecompositionCategory");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cAndEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cAndAndKeyword_0_0 = (Keyword)cAndEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOrEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cOrOrKeyword_1_0 = (Keyword)cOrEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cXorEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cXorXorKeyword_2_0 = (Keyword)cXorEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cInc_orEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cInc_orIncOrKeyword_3_0 = (Keyword)cInc_orEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum DecompositionCategory:
		//	and | or | xor | inc_or="inc-or";
		public EnumRule getRule() { return rule; }

		//and | or | xor | inc_or="inc-or"
		public Alternatives getAlternatives() { return cAlternatives; }

		//and
		public EnumLiteralDeclaration getAndEnumLiteralDeclaration_0() { return cAndEnumLiteralDeclaration_0; }

		//"and"
		public Keyword getAndAndKeyword_0_0() { return cAndAndKeyword_0_0; }

		//or
		public EnumLiteralDeclaration getOrEnumLiteralDeclaration_1() { return cOrEnumLiteralDeclaration_1; }

		//"or"
		public Keyword getOrOrKeyword_1_0() { return cOrOrKeyword_1_0; }

		//xor
		public EnumLiteralDeclaration getXorEnumLiteralDeclaration_2() { return cXorEnumLiteralDeclaration_2; }

		//"xor"
		public Keyword getXorXorKeyword_2_0() { return cXorXorKeyword_2_0; }

		//inc_or="inc-or"
		public EnumLiteralDeclaration getInc_orEnumLiteralDeclaration_3() { return cInc_orEnumLiteralDeclaration_3; }

		//"inc-or"
		public Keyword getInc_orIncOrKeyword_3_0() { return cInc_orIncOrKeyword_3_0; }
	}

	public class CorrelationCategoryElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "CorrelationCategory");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMakeEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMakeMakeKeyword_0_0 = (Keyword)cMakeEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cBreakEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cBreakBreakKeyword_1_0 = (Keyword)cBreakEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cHelpEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cHelpHelpKeyword_2_0 = (Keyword)cHelpEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cHurtEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cHurtHurtKeyword_3_0 = (Keyword)cHurtEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cUnknownEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cUnknownUnknownKeyword_4_0 = (Keyword)cUnknownEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum CorrelationCategory:
		//	make | break | help | hurt | unknown;
		public EnumRule getRule() { return rule; }

		//make | break | help | hurt | unknown
		public Alternatives getAlternatives() { return cAlternatives; }

		//make
		public EnumLiteralDeclaration getMakeEnumLiteralDeclaration_0() { return cMakeEnumLiteralDeclaration_0; }

		//"make"
		public Keyword getMakeMakeKeyword_0_0() { return cMakeMakeKeyword_0_0; }

		//break
		public EnumLiteralDeclaration getBreakEnumLiteralDeclaration_1() { return cBreakEnumLiteralDeclaration_1; }

		//"break"
		public Keyword getBreakBreakKeyword_1_0() { return cBreakBreakKeyword_1_0; }

		//help
		public EnumLiteralDeclaration getHelpEnumLiteralDeclaration_2() { return cHelpEnumLiteralDeclaration_2; }

		//"help"
		public Keyword getHelpHelpKeyword_2_0() { return cHelpHelpKeyword_2_0; }

		//hurt
		public EnumLiteralDeclaration getHurtEnumLiteralDeclaration_3() { return cHurtEnumLiteralDeclaration_3; }

		//"hurt"
		public Keyword getHurtHurtKeyword_3_0() { return cHurtHurtKeyword_3_0; }

		//unknown
		public EnumLiteralDeclaration getUnknownEnumLiteralDeclaration_4() { return cUnknownEnumLiteralDeclaration_4; }

		//"unknown"
		public Keyword getUnknownUnknownKeyword_4_0() { return cUnknownUnknownKeyword_4_0; }
	}

	public class PrimitiveTypesElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "PrimitiveTypes");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cIncludeEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cIncludeIncludeKeyword_0_0 = (Keyword)cIncludeEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSubstituteEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSubstituteSubstituteKeyword_1_0 = (Keyword)cSubstituteEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum PrimitiveTypes:
		//	include | substitute;
		public EnumRule getRule() { return rule; }

		//include | substitute
		public Alternatives getAlternatives() { return cAlternatives; }

		//include
		public EnumLiteralDeclaration getIncludeEnumLiteralDeclaration_0() { return cIncludeEnumLiteralDeclaration_0; }

		//"include"
		public Keyword getIncludeIncludeKeyword_0_0() { return cIncludeIncludeKeyword_0_0; }

		//substitute
		public EnumLiteralDeclaration getSubstituteEnumLiteralDeclaration_1() { return cSubstituteEnumLiteralDeclaration_1; }

		//"substitute"
		public Keyword getSubstituteSubstituteKeyword_1_0() { return cSubstituteSubstituteKeyword_1_0; }
	}

	public class OperatorTypesElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "OperatorTypes");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cAndEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cAndAndKeyword_0_0 = (Keyword)cAndEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOrEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cOrOrKeyword_1_0 = (Keyword)cOrEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cNotEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cNotNotKeyword_2_0 = (Keyword)cNotEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum OperatorTypes:
		//	and | or | not;
		public EnumRule getRule() { return rule; }

		//and | or | not
		public Alternatives getAlternatives() { return cAlternatives; }

		//and
		public EnumLiteralDeclaration getAndEnumLiteralDeclaration_0() { return cAndEnumLiteralDeclaration_0; }

		//"and"
		public Keyword getAndAndKeyword_0_0() { return cAndAndKeyword_0_0; }

		//or
		public EnumLiteralDeclaration getOrEnumLiteralDeclaration_1() { return cOrEnumLiteralDeclaration_1; }

		//"or"
		public Keyword getOrOrKeyword_1_0() { return cOrOrKeyword_1_0; }

		//not
		public EnumLiteralDeclaration getNotEnumLiteralDeclaration_2() { return cNotEnumLiteralDeclaration_2; }

		//"not"
		public Keyword getNotNotKeyword_2_0() { return cNotNotKeyword_2_0; }
	}

	public class AdviceCategoryElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "AdviceCategory");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cAroundEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cAroundAroundKeyword_0_0 = (Keyword)cAroundEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cBeforeEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cBeforeBeforeKeyword_1_0 = (Keyword)cBeforeEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cAfterEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cAfterAfterKeyword_2_0 = (Keyword)cAfterEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum AdviceCategory:
		//	around | before | after;
		public EnumRule getRule() { return rule; }

		//around | before | after
		public Alternatives getAlternatives() { return cAlternatives; }

		//around
		public EnumLiteralDeclaration getAroundEnumLiteralDeclaration_0() { return cAroundEnumLiteralDeclaration_0; }

		//"around"
		public Keyword getAroundAroundKeyword_0_0() { return cAroundAroundKeyword_0_0; }

		//before
		public EnumLiteralDeclaration getBeforeEnumLiteralDeclaration_1() { return cBeforeEnumLiteralDeclaration_1; }

		//"before"
		public Keyword getBeforeBeforeKeyword_1_0() { return cBeforeBeforeKeyword_1_0; }

		//after
		public EnumLiteralDeclaration getAfterEnumLiteralDeclaration_2() { return cAfterEnumLiteralDeclaration_2; }

		//"after"
		public Keyword getAfterAfterKeyword_2_0() { return cAfterAfterKeyword_2_0; }
	}

	public class IntertypeCategoryElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "IntertypeCategory");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cElementEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cElementElementKeyword_0_0 = (Keyword)cElementEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cAttributeEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cAttributeAttributeKeyword_1_0 = (Keyword)cAttributeEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum IntertypeCategory:
		//	element | attribute;
		public EnumRule getRule() { return rule; }

		//element | attribute
		public Alternatives getAlternatives() { return cAlternatives; }

		//element
		public EnumLiteralDeclaration getElementEnumLiteralDeclaration_0() { return cElementEnumLiteralDeclaration_0; }

		//"element"
		public Keyword getElementElementKeyword_0_0() { return cElementElementKeyword_0_0; }

		//attribute
		public EnumLiteralDeclaration getAttributeEnumLiteralDeclaration_1() { return cAttributeEnumLiteralDeclaration_1; }

		//"attribute"
		public Keyword getAttributeAttributeKeyword_1_0() { return cAttributeAttributeKeyword_1_0; }
	}
	
	private Aspect_Oriented_ModelElements pAspect_Oriented_Model;
	private Goal_ModelElements pGoal_Model;
	private ElementElements pElement;
	private ElementTypesElements unknownRuleElementTypes;
	private PropertyElements pProperty;
	private IsFeatureElements pIsFeature;
	private IsFeatureTypesElements unknownRuleIsFeatureTypes;
	private CardinalityElements pCardinality;
	private GroupFeatureElements pGroupFeature;
	private Generic_PropertyElements pGeneric_Property;
	private ContributionElements pContribution;
	private DecompositionCategoryElements unknownRuleDecompositionCategory;
	private CorrelationElements pCorrelation;
	private CorrelationCategoryElements unknownRuleCorrelationCategory;
	private CrosscuttingElements pCrosscutting;
	private PointcutElements pPointcut;
	private OperandElements pOperand;
	private Operand2Elements pOperand2;
	private OperatorElements pOperator;
	private PrimitiveTypesElements unknownRulePrimitiveTypes;
	private OperatorTypesElements unknownRuleOperatorTypes;
	private AdviceElements pAdvice;
	private AdviceCategoryElements unknownRuleAdviceCategory;
	private IntertypeDeclarationElements pIntertypeDeclaration;
	private IntertypeCategoryElements unknownRuleIntertypeCategory;
	private AttributeElements pAttribute;
	private EStringElements pEString;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public PLAOVgraphGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammarProvider = grammarProvider;
		this.gaTerminals = gaTerminals;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Aspect_Oriented_Model:
	//	"aspect_oriented_model" "{" goalmodel+=Goal_Model+ "}" ";";
	public Aspect_Oriented_ModelElements getAspect_Oriented_ModelAccess() {
		return (pAspect_Oriented_Model != null) ? pAspect_Oriented_Model : (pAspect_Oriented_Model = new Aspect_Oriented_ModelElements());
	}
	
	public ParserRule getAspect_Oriented_ModelRule() {
		return getAspect_Oriented_ModelAccess().getRule();
	}

	//Goal_Model:
	//	"goal_model" name=STRING "{" ("property" "{" property+=Property+ "}")? element+=Element* relationship+=(Correlation |
	//	Crosscutting)* "}";
	public Goal_ModelElements getGoal_ModelAccess() {
		return (pGoal_Model != null) ? pGoal_Model : (pGoal_Model = new Goal_ModelElements());
	}
	
	public ParserRule getGoal_ModelRule() {
		return getGoal_ModelAccess().getRule();
	}

	//Element:
	//	type=ElementTypes name=STRING "(" relationship+=Contribution? ")" "{" ("property" "{" property+=Property+ "}")?
	//	element+=Element* "}";
	public ElementElements getElementAccess() {
		return (pElement != null) ? pElement : (pElement = new ElementElements());
	}
	
	public ParserRule getElementRule() {
		return getElementAccess().getRule();
	}

	//enum ElementTypes:
	//	task | goal | softgoal | task_ref | goal_ref | softgoal_ref;
	public ElementTypesElements getElementTypesAccess() {
		return (unknownRuleElementTypes != null) ? unknownRuleElementTypes : (unknownRuleElementTypes = new ElementTypesElements());
	}
	
	public EnumRule getElementTypesRule() {
		return getElementTypesAccess().getRule();
	}

	//Property:
	//	IsFeature | Cardinality | GroupFeature | Generic_Property;
	public PropertyElements getPropertyAccess() {
		return (pProperty != null) ? pProperty : (pProperty = new PropertyElements());
	}
	
	public ParserRule getPropertyRule() {
		return getPropertyAccess().getRule();
	}

	//IsFeature:
	//	"isFeature" "=" label=IsFeatureTypes ";";
	public IsFeatureElements getIsFeatureAccess() {
		return (pIsFeature != null) ? pIsFeature : (pIsFeature = new IsFeatureElements());
	}
	
	public ParserRule getIsFeatureRule() {
		return getIsFeatureAccess().getRule();
	}

	//enum IsFeatureTypes:
	//	no | yes;
	public IsFeatureTypesElements getIsFeatureTypesAccess() {
		return (unknownRuleIsFeatureTypes != null) ? unknownRuleIsFeatureTypes : (unknownRuleIsFeatureTypes = new IsFeatureTypesElements());
	}
	
	public EnumRule getIsFeatureTypesRule() {
		return getIsFeatureTypesAccess().getRule();
	}

	//Cardinality:
	//	"cardinalityMin" "=" cardinalityMin=EString ";" "cardinalityMax" "=" cardinalityMax=EString ";";
	public CardinalityElements getCardinalityAccess() {
		return (pCardinality != null) ? pCardinality : (pCardinality = new CardinalityElements());
	}
	
	public ParserRule getCardinalityRule() {
		return getCardinalityAccess().getRule();
	}

	//GroupFeature:
	//	"groupFeature" "=" "(" ("task" | "goal" | "softgoal") source+=[Element|STRING] ("," ("task" | "goal" | "softgoal")
	//	source+=[Element|STRING])* ")" ";" "cardinalityGroupMin" "=" cardinalityGroupMin=EString ";" "cardinalityGroupMax" "="
	//	cardinalityGroupMax=EString ";";
	public GroupFeatureElements getGroupFeatureAccess() {
		return (pGroupFeature != null) ? pGroupFeature : (pGroupFeature = new GroupFeatureElements());
	}
	
	public ParserRule getGroupFeatureRule() {
		return getGroupFeatureAccess().getRule();
	}

	//Generic_Property:
	//	name=ID "=" value=ID ";";
	public Generic_PropertyElements getGeneric_PropertyAccess() {
		return (pGeneric_Property != null) ? pGeneric_Property : (pGeneric_Property = new Generic_PropertyElements());
	}
	
	public ParserRule getGeneric_PropertyRule() {
		return getGeneric_PropertyAccess().getRule();
	}

	//Contribution:
	//	label=DecompositionCategory;
	public ContributionElements getContributionAccess() {
		return (pContribution != null) ? pContribution : (pContribution = new ContributionElements());
	}
	
	public ParserRule getContributionRule() {
		return getContributionAccess().getRule();
	}

	//enum DecompositionCategory:
	//	and | or | xor | inc_or="inc-or";
	public DecompositionCategoryElements getDecompositionCategoryAccess() {
		return (unknownRuleDecompositionCategory != null) ? unknownRuleDecompositionCategory : (unknownRuleDecompositionCategory = new DecompositionCategoryElements());
	}
	
	public EnumRule getDecompositionCategoryRule() {
		return getDecompositionCategoryAccess().getRule();
	}

	//Correlation:
	//	"correlation" "(" label=CorrelationCategory ")" "{" "source" ":" ("task_ref" | "goal_ref" | "softgoal_ref")
	//	source=[Element|STRING] "target" ":" ("task_ref" | "goal_ref" | "softgoal_ref") target=[Element|STRING] "}";
	public CorrelationElements getCorrelationAccess() {
		return (pCorrelation != null) ? pCorrelation : (pCorrelation = new CorrelationElements());
	}
	
	public ParserRule getCorrelationRule() {
		return getCorrelationAccess().getRule();
	}

	//enum CorrelationCategory:
	//	make | break | help | hurt | unknown;
	public CorrelationCategoryElements getCorrelationCategoryAccess() {
		return (unknownRuleCorrelationCategory != null) ? unknownRuleCorrelationCategory : (unknownRuleCorrelationCategory = new CorrelationCategoryElements());
	}
	
	public EnumRule getCorrelationCategoryRule() {
		return getCorrelationCategoryAccess().getRule();
	}

	//Crosscutting:
	//	"crosscutting" "{" "source" ":" ("task_ref" | "goal_ref" | "softgoal_ref") source=[Element|STRING] pointcut+=Pointcut
	//	pointcut+=Pointcut* (advice+=Advice advice+=Advice*)? (intertype+=IntertypeDeclaration
	//	intertype+=IntertypeDeclaration*)? "}";
	public CrosscuttingElements getCrosscuttingAccess() {
		return (pCrosscutting != null) ? pCrosscutting : (pCrosscutting = new CrosscuttingElements());
	}
	
	public ParserRule getCrosscuttingRule() {
		return getCrosscuttingAccess().getRule();
	}

	//Pointcut:
	//	"pointcut" name=ID ":" operand+=Operand operand+=Operand2*;
	public PointcutElements getPointcutAccess() {
		return (pPointcut != null) ? pPointcut : (pPointcut = new PointcutElements());
	}
	
	public ParserRule getPointcutRule() {
		return getPointcutAccess().getRule();
	}

	//Operand:
	//	primitive=PrimitiveTypes joinpointPointcut=[Element|STRING];
	public OperandElements getOperandAccess() {
		return (pOperand != null) ? pOperand : (pOperand = new OperandElements());
	}
	
	public ParserRule getOperandRule() {
		return getOperandAccess().getRule();
	}

	//Operand2 returns Operand:
	//	operator=Operator primitive=PrimitiveTypes joinpointPointcut=[Element|STRING];
	public Operand2Elements getOperand2Access() {
		return (pOperand2 != null) ? pOperand2 : (pOperand2 = new Operand2Elements());
	}
	
	public ParserRule getOperand2Rule() {
		return getOperand2Access().getRule();
	}

	//Operator:
	//	operator=OperatorTypes;
	public OperatorElements getOperatorAccess() {
		return (pOperator != null) ? pOperator : (pOperator = new OperatorElements());
	}
	
	public ParserRule getOperatorRule() {
		return getOperatorAccess().getRule();
	}

	//enum PrimitiveTypes:
	//	include | substitute;
	public PrimitiveTypesElements getPrimitiveTypesAccess() {
		return (unknownRulePrimitiveTypes != null) ? unknownRulePrimitiveTypes : (unknownRulePrimitiveTypes = new PrimitiveTypesElements());
	}
	
	public EnumRule getPrimitiveTypesRule() {
		return getPrimitiveTypesAccess().getRule();
	}

	//enum OperatorTypes:
	//	and | or | not;
	public OperatorTypesElements getOperatorTypesAccess() {
		return (unknownRuleOperatorTypes != null) ? unknownRuleOperatorTypes : (unknownRuleOperatorTypes = new OperatorTypesElements());
	}
	
	public EnumRule getOperatorTypesRule() {
		return getOperatorTypesAccess().getRule();
	}

	//Advice:
	//	"advice" "(" type=AdviceCategory ")" ":" idPointcut+=[Pointcut] ("and" idPointcut+=[Pointcut])* "{" (("task_ref" |
	//	"goal_ref" | "softgoal_ref") joinpointAdvice+=[Element|STRING] "(" ("and" | "or" | "xor" | "inc-or")? ")")+ "}";
	public AdviceElements getAdviceAccess() {
		return (pAdvice != null) ? pAdvice : (pAdvice = new AdviceElements());
	}
	
	public ParserRule getAdviceRule() {
		return getAdviceAccess().getRule();
	}

	//enum AdviceCategory:
	//	around | before | after;
	public AdviceCategoryElements getAdviceCategoryAccess() {
		return (unknownRuleAdviceCategory != null) ? unknownRuleAdviceCategory : (unknownRuleAdviceCategory = new AdviceCategoryElements());
	}
	
	public EnumRule getAdviceCategoryRule() {
		return getAdviceCategoryAccess().getRule();
	}

	//IntertypeDeclaration:
	//	"intertype declaration" "(" type=IntertypeCategory ")" ":" idPointcut+=[Pointcut] ("and" idPointcut+=[Pointcut])* "{"
	//	(newElement+=Element | newAttribute+=Attribute)+ "}";
	public IntertypeDeclarationElements getIntertypeDeclarationAccess() {
		return (pIntertypeDeclaration != null) ? pIntertypeDeclaration : (pIntertypeDeclaration = new IntertypeDeclarationElements());
	}
	
	public ParserRule getIntertypeDeclarationRule() {
		return getIntertypeDeclarationAccess().getRule();
	}

	//enum IntertypeCategory:
	//	element | attribute;
	public IntertypeCategoryElements getIntertypeCategoryAccess() {
		return (unknownRuleIntertypeCategory != null) ? unknownRuleIntertypeCategory : (unknownRuleIntertypeCategory = new IntertypeCategoryElements());
	}
	
	public EnumRule getIntertypeCategoryRule() {
		return getIntertypeCategoryAccess().getRule();
	}

	//Attribute:
	//	type=STRING "=" value=STRING;
	public AttributeElements getAttributeAccess() {
		return (pAttribute != null) ? pAttribute : (pAttribute = new AttributeElements());
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}

	//EString returns ecore::EString:
	//	ID | INT;
	public EStringElements getEStringAccess() {
		return (pEString != null) ? pEString : (pEString = new EStringElements());
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" | "n" |
	//	"f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
