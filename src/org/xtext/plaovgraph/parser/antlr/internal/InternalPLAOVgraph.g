/*
* generated by Xtext
*/
grammar InternalPLAOVgraph;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.xtext.plaovgraph.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.plaovgraph.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.plaovgraph.services.PLAOVgraphGrammarAccess;

}

@parser::members {

 	private PLAOVgraphGrammarAccess grammarAccess;
 	
    public InternalPLAOVgraphParser(TokenStream input, PLAOVgraphGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Aspect_Oriented_Model";	
   	}
   	
   	@Override
   	protected PLAOVgraphGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleAspect_Oriented_Model
entryRuleAspect_Oriented_Model returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAspect_Oriented_ModelRule()); }
	 iv_ruleAspect_Oriented_Model=ruleAspect_Oriented_Model 
	 { $current=$iv_ruleAspect_Oriented_Model.current; } 
	 EOF 
;

// Rule Aspect_Oriented_Model
ruleAspect_Oriented_Model returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Aspect_Oriented_Model' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAspect_Oriented_ModelAccess().getAspect_Oriented_ModelKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAspect_Oriented_ModelAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='goalmodel' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAspect_Oriented_ModelAccess().getGoalmodelKeyword_2());
    }
	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAspect_Oriented_ModelAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAspect_Oriented_ModelAccess().getGoalmodelGoal_ModelParserRuleCall_4_0()); 
	    }
		lv_goalmodel_4_0=ruleGoal_Model		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAspect_Oriented_ModelRule());
	        }
       		add(
       			$current, 
       			"goalmodel",
        		lv_goalmodel_4_0, 
        		"Goal_Model");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAspect_Oriented_ModelAccess().getCommaKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAspect_Oriented_ModelAccess().getGoalmodelGoal_ModelParserRuleCall_5_1_0()); 
	    }
		lv_goalmodel_6_0=ruleGoal_Model		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAspect_Oriented_ModelRule());
	        }
       		add(
       			$current, 
       			"goalmodel",
        		lv_goalmodel_6_0, 
        		"Goal_Model");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getAspect_Oriented_ModelAccess().getRightCurlyBracketKeyword_6());
    }
	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getAspect_Oriented_ModelAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleGoal_Model
entryRuleGoal_Model returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGoal_ModelRule()); }
	 iv_ruleGoal_Model=ruleGoal_Model 
	 { $current=$iv_ruleGoal_Model.current; } 
	 EOF 
;

// Rule Goal_Model
ruleGoal_Model returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getGoal_ModelAccess().getGoal_Model_ImplParserRuleCall_0()); 
    }
    this_Goal_Model_Impl_0=ruleGoal_Model_Impl
    { 
        $current = $this_Goal_Model_Impl_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getGoal_ModelAccess().getElementParserRuleCall_1()); 
    }
    this_Element_1=ruleElement
    { 
        $current = $this_Element_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRelationship
entryRuleRelationship returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationshipRule()); }
	 iv_ruleRelationship=ruleRelationship 
	 { $current=$iv_ruleRelationship.current; } 
	 EOF 
;

// Rule Relationship
ruleRelationship returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRelationshipAccess().getContributionParserRuleCall_0()); 
    }
    this_Contribution_0=ruleContribution
    { 
        $current = $this_Contribution_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRelationshipAccess().getCorrelationParserRuleCall_1()); 
    }
    this_Correlation_1=ruleCorrelation
    { 
        $current = $this_Correlation_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRelationshipAccess().getCrosscuttingParserRuleCall_2()); 
    }
    this_Crosscutting_2=ruleCrosscutting
    { 
        $current = $this_Crosscutting_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyRule()); }
	 iv_ruleProperty=ruleProperty 
	 { $current=$iv_ruleProperty.current; } 
	 EOF 
;

// Rule Property
ruleProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPropertyAccess().getIsFeatureParserRuleCall_0()); 
    }
    this_IsFeature_0=ruleIsFeature
    { 
        $current = $this_IsFeature_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPropertyAccess().getCardinalityParserRuleCall_1()); 
    }
    this_Cardinality_1=ruleCardinality
    { 
        $current = $this_Cardinality_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPropertyAccess().getGroupFeatureParserRuleCall_2()); 
    }
    this_GroupFeature_2=ruleGroupFeature
    { 
        $current = $this_GroupFeature_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPropertyAccess().getGeneric_PropertyParserRuleCall_3()); 
    }
    this_Generic_Property_3=ruleGeneric_Property
    { 
        $current = $this_Generic_Property_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleGoal_Model_Impl
entryRuleGoal_Model_Impl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGoal_Model_ImplRule()); }
	 iv_ruleGoal_Model_Impl=ruleGoal_Model_Impl 
	 { $current=$iv_ruleGoal_Model_Impl.current; } 
	 EOF 
;

// Rule Goal_Model_Impl
ruleGoal_Model_Impl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getGoal_Model_ImplAccess().getGoal_ModelAction_0(),
            $current);
    }
)	otherlv_1='Goal_Model' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getGoal_Model_ImplAccess().getGoal_ModelKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGoal_Model_ImplAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoal_Model_ImplRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getGoal_Model_ImplAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='element' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getGoal_Model_ImplAccess().getElementKeyword_4_0());
    }
	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getGoal_Model_ImplAccess().getLeftCurlyBracketKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGoal_Model_ImplAccess().getElementElementParserRuleCall_4_2_0()); 
	    }
		lv_element_6_0=ruleElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoal_Model_ImplRule());
	        }
       		add(
       			$current, 
       			"element",
        		lv_element_6_0, 
        		"Element");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getGoal_Model_ImplAccess().getCommaKeyword_4_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGoal_Model_ImplAccess().getElementElementParserRuleCall_4_3_1_0()); 
	    }
		lv_element_8_0=ruleElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoal_Model_ImplRule());
	        }
       		add(
       			$current, 
       			"element",
        		lv_element_8_0, 
        		"Element");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getGoal_Model_ImplAccess().getRightCurlyBracketKeyword_4_4());
    }
)?(	otherlv_10='relationship' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getGoal_Model_ImplAccess().getRelationshipKeyword_5_0());
    }
	otherlv_11='{' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getGoal_Model_ImplAccess().getLeftCurlyBracketKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGoal_Model_ImplAccess().getRelationshipRelationshipParserRuleCall_5_2_0()); 
	    }
		lv_relationship_12_0=ruleRelationship		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoal_Model_ImplRule());
	        }
       		add(
       			$current, 
       			"relationship",
        		lv_relationship_12_0, 
        		"Relationship");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_13=',' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getGoal_Model_ImplAccess().getCommaKeyword_5_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGoal_Model_ImplAccess().getRelationshipRelationshipParserRuleCall_5_3_1_0()); 
	    }
		lv_relationship_14_0=ruleRelationship		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoal_Model_ImplRule());
	        }
       		add(
       			$current, 
       			"relationship",
        		lv_relationship_14_0, 
        		"Relationship");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getGoal_Model_ImplAccess().getRightCurlyBracketKeyword_5_4());
    }
)?(	otherlv_16='property' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getGoal_Model_ImplAccess().getPropertyKeyword_6_0());
    }
	otherlv_17='{' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getGoal_Model_ImplAccess().getLeftCurlyBracketKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGoal_Model_ImplAccess().getPropertyPropertyParserRuleCall_6_2_0()); 
	    }
		lv_property_18_0=ruleProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoal_Model_ImplRule());
	        }
       		add(
       			$current, 
       			"property",
        		lv_property_18_0, 
        		"Property");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_19=',' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getGoal_Model_ImplAccess().getCommaKeyword_6_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGoal_Model_ImplAccess().getPropertyPropertyParserRuleCall_6_3_1_0()); 
	    }
		lv_property_20_0=ruleProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoal_Model_ImplRule());
	        }
       		add(
       			$current, 
       			"property",
        		lv_property_20_0, 
        		"Property");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_21='}' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getGoal_Model_ImplAccess().getRightCurlyBracketKeyword_6_4());
    }
)?	otherlv_22='}' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getGoal_Model_ImplAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	 iv_ruleElement=ruleElement 
	 { $current=$iv_ruleElement.current; } 
	 EOF 
;

// Rule Element
ruleElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Element' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getElementAccess().getElementKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElementAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElementRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getElementAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='type' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getElementAccess().getTypeKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElementAccess().getTypeElementTypesEnumRuleCall_4_0()); 
	    }
		lv_type_4_0=ruleElementTypes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElementRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_4_0, 
        		"ElementTypes");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5='element' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getElementAccess().getElementKeyword_5_0());
    }
	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getElementAccess().getLeftCurlyBracketKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElementAccess().getElementElementParserRuleCall_5_2_0()); 
	    }
		lv_element_7_0=ruleElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElementRule());
	        }
       		add(
       			$current, 
       			"element",
        		lv_element_7_0, 
        		"Element");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getElementAccess().getCommaKeyword_5_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElementAccess().getElementElementParserRuleCall_5_3_1_0()); 
	    }
		lv_element_9_0=ruleElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElementRule());
	        }
       		add(
       			$current, 
       			"element",
        		lv_element_9_0, 
        		"Element");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getElementAccess().getRightCurlyBracketKeyword_5_4());
    }
)?(	otherlv_11='relationship' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getElementAccess().getRelationshipKeyword_6_0());
    }
	otherlv_12='{' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getElementAccess().getLeftCurlyBracketKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElementAccess().getRelationshipRelationshipParserRuleCall_6_2_0()); 
	    }
		lv_relationship_13_0=ruleRelationship		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElementRule());
	        }
       		add(
       			$current, 
       			"relationship",
        		lv_relationship_13_0, 
        		"Relationship");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_14=',' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getElementAccess().getCommaKeyword_6_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElementAccess().getRelationshipRelationshipParserRuleCall_6_3_1_0()); 
	    }
		lv_relationship_15_0=ruleRelationship		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElementRule());
	        }
       		add(
       			$current, 
       			"relationship",
        		lv_relationship_15_0, 
        		"Relationship");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_16='}' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getElementAccess().getRightCurlyBracketKeyword_6_4());
    }
)?(	otherlv_17='property' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getElementAccess().getPropertyKeyword_7_0());
    }
	otherlv_18='{' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getElementAccess().getLeftCurlyBracketKeyword_7_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElementAccess().getPropertyPropertyParserRuleCall_7_2_0()); 
	    }
		lv_property_19_0=ruleProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElementRule());
	        }
       		add(
       			$current, 
       			"property",
        		lv_property_19_0, 
        		"Property");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_20=',' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getElementAccess().getCommaKeyword_7_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElementAccess().getPropertyPropertyParserRuleCall_7_3_1_0()); 
	    }
		lv_property_21_0=ruleProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElementRule());
	        }
       		add(
       			$current, 
       			"property",
        		lv_property_21_0, 
        		"Property");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_22='}' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getElementAccess().getRightCurlyBracketKeyword_7_4());
    }
)?	otherlv_23='}' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getElementAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleContribution
entryRuleContribution returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getContributionRule()); }
	 iv_ruleContribution=ruleContribution 
	 { $current=$iv_ruleContribution.current; } 
	 EOF 
;

// Rule Contribution
ruleContribution returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Contribution' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getContributionAccess().getContributionKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getContributionAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='label' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getContributionAccess().getLabelKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContributionAccess().getLabelDecompositionCategoryEnumRuleCall_3_0()); 
	    }
		lv_label_3_0=ruleDecompositionCategory		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContributionRule());
	        }
       		set(
       			$current, 
       			"label",
        		lv_label_3_0, 
        		"DecompositionCategory");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='source' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getContributionAccess().getSourceKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getContributionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getContributionAccess().getSourceGoal_ModelCrossReference_4_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='target' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getContributionAccess().getTargetKeyword_5_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getContributionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getContributionAccess().getTargetGoal_ModelCrossReference_5_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getContributionAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleCorrelation
entryRuleCorrelation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCorrelationRule()); }
	 iv_ruleCorrelation=ruleCorrelation 
	 { $current=$iv_ruleCorrelation.current; } 
	 EOF 
;

// Rule Correlation
ruleCorrelation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Correlation' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCorrelationAccess().getCorrelationKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCorrelationAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='label' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCorrelationAccess().getLabelKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCorrelationAccess().getLabelCorrelationCategoryEnumRuleCall_3_0()); 
	    }
		lv_label_3_0=ruleCorrelationCategory		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCorrelationRule());
	        }
       		set(
       			$current, 
       			"label",
        		lv_label_3_0, 
        		"CorrelationCategory");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='source' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCorrelationAccess().getSourceKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCorrelationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getCorrelationAccess().getSourceGoal_ModelCrossReference_4_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='target' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCorrelationAccess().getTargetKeyword_5_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCorrelationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getCorrelationAccess().getTargetGoal_ModelCrossReference_5_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCorrelationAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleCrosscutting
entryRuleCrosscutting returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCrosscuttingRule()); }
	 iv_ruleCrosscutting=ruleCrosscutting 
	 { $current=$iv_ruleCrosscutting.current; } 
	 EOF 
;

// Rule Crosscutting
ruleCrosscutting returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Crosscutting' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCrosscuttingAccess().getCrosscuttingKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCrosscuttingAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='source' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCrosscuttingAccess().getSourceKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCrosscuttingRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getCrosscuttingAccess().getSourceGoal_ModelCrossReference_2_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_4='target' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCrosscuttingAccess().getTargetKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCrosscuttingRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getCrosscuttingAccess().getTargetGoal_ModelCrossReference_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='pointcut' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCrosscuttingAccess().getPointcutKeyword_4());
    }
	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCrosscuttingAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCrosscuttingAccess().getPointcutPointcutParserRuleCall_6_0()); 
	    }
		lv_pointcut_8_0=rulePointcut		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCrosscuttingRule());
	        }
       		add(
       			$current, 
       			"pointcut",
        		lv_pointcut_8_0, 
        		"Pointcut");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getCrosscuttingAccess().getCommaKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCrosscuttingAccess().getPointcutPointcutParserRuleCall_7_1_0()); 
	    }
		lv_pointcut_10_0=rulePointcut		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCrosscuttingRule());
	        }
       		add(
       			$current, 
       			"pointcut",
        		lv_pointcut_10_0, 
        		"Pointcut");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getCrosscuttingAccess().getRightCurlyBracketKeyword_8());
    }
(	otherlv_12='advice' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getCrosscuttingAccess().getAdviceKeyword_9_0());
    }
	otherlv_13='{' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getCrosscuttingAccess().getLeftCurlyBracketKeyword_9_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCrosscuttingAccess().getAdviceAdviceParserRuleCall_9_2_0()); 
	    }
		lv_advice_14_0=ruleAdvice		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCrosscuttingRule());
	        }
       		add(
       			$current, 
       			"advice",
        		lv_advice_14_0, 
        		"Advice");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_15=',' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getCrosscuttingAccess().getCommaKeyword_9_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCrosscuttingAccess().getAdviceAdviceParserRuleCall_9_3_1_0()); 
	    }
		lv_advice_16_0=ruleAdvice		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCrosscuttingRule());
	        }
       		add(
       			$current, 
       			"advice",
        		lv_advice_16_0, 
        		"Advice");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_17='}' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getCrosscuttingAccess().getRightCurlyBracketKeyword_9_4());
    }
)?(	otherlv_18='intertype' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getCrosscuttingAccess().getIntertypeKeyword_10_0());
    }
	otherlv_19='{' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getCrosscuttingAccess().getLeftCurlyBracketKeyword_10_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCrosscuttingAccess().getIntertypeIntertypeDeclarationParserRuleCall_10_2_0()); 
	    }
		lv_intertype_20_0=ruleIntertypeDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCrosscuttingRule());
	        }
       		add(
       			$current, 
       			"intertype",
        		lv_intertype_20_0, 
        		"IntertypeDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_21=',' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getCrosscuttingAccess().getCommaKeyword_10_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCrosscuttingAccess().getIntertypeIntertypeDeclarationParserRuleCall_10_3_1_0()); 
	    }
		lv_intertype_22_0=ruleIntertypeDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCrosscuttingRule());
	        }
       		add(
       			$current, 
       			"intertype",
        		lv_intertype_22_0, 
        		"IntertypeDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_23='}' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getCrosscuttingAccess().getRightCurlyBracketKeyword_10_4());
    }
)?	otherlv_24='}' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getCrosscuttingAccess().getRightCurlyBracketKeyword_11());
    }
)
;





// Entry rule entryRulePointcut
entryRulePointcut returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPointcutRule()); }
	 iv_rulePointcut=rulePointcut 
	 { $current=$iv_rulePointcut.current; } 
	 EOF 
;

// Rule Pointcut
rulePointcut returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Pointcut' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPointcutAccess().getPointcutKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPointcutAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPointcutRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPointcutAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='operand' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPointcutAccess().getOperandKeyword_3());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPointcutAccess().getLeftCurlyBracketKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPointcutAccess().getOperandOperandParserRuleCall_5_0()); 
	    }
		lv_operand_5_0=ruleOperand		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPointcutRule());
	        }
       		add(
       			$current, 
       			"operand",
        		lv_operand_5_0, 
        		"Operand");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPointcutAccess().getCommaKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPointcutAccess().getOperandOperandParserRuleCall_6_1_0()); 
	    }
		lv_operand_7_0=ruleOperand		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPointcutRule());
	        }
       		add(
       			$current, 
       			"operand",
        		lv_operand_7_0, 
        		"Operand");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getPointcutAccess().getRightCurlyBracketKeyword_7());
    }
	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getPointcutAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleAdvice
entryRuleAdvice returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAdviceRule()); }
	 iv_ruleAdvice=ruleAdvice 
	 { $current=$iv_ruleAdvice.current; } 
	 EOF 
;

// Rule Advice
ruleAdvice returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Advice' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAdviceAccess().getAdviceKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAdviceAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='type' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAdviceAccess().getTypeKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAdviceAccess().getTypeAdviceCategoryEnumRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleAdviceCategory		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdviceRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"AdviceCategory");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='joinpointAdvice' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAdviceAccess().getJoinpointAdviceKeyword_4_0());
    }
	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAdviceAccess().getLeftParenthesisKeyword_4_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAdviceRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAdviceAccess().getJoinpointAdviceElementCrossReference_4_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getAdviceAccess().getCommaKeyword_4_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAdviceRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAdviceAccess().getJoinpointAdviceElementCrossReference_4_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getAdviceAccess().getRightParenthesisKeyword_4_4());
    }
)?	otherlv_10='idPointcut' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getAdviceAccess().getIdPointcutKeyword_5());
    }
	otherlv_11='(' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getAdviceAccess().getLeftParenthesisKeyword_6());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAdviceRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAdviceAccess().getIdPointcutPointcutCrossReference_7_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_13=',' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getAdviceAccess().getCommaKeyword_8_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAdviceRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAdviceAccess().getIdPointcutPointcutCrossReference_8_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_15=')' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getAdviceAccess().getRightParenthesisKeyword_9());
    }
	otherlv_16='}' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getAdviceAccess().getRightCurlyBracketKeyword_10());
    }
)
;





// Entry rule entryRuleIntertypeDeclaration
entryRuleIntertypeDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntertypeDeclarationRule()); }
	 iv_ruleIntertypeDeclaration=ruleIntertypeDeclaration 
	 { $current=$iv_ruleIntertypeDeclaration.current; } 
	 EOF 
;

// Rule IntertypeDeclaration
ruleIntertypeDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='IntertypeDeclaration' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIntertypeDeclarationAccess().getIntertypeDeclarationKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIntertypeDeclarationAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='type' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIntertypeDeclarationAccess().getTypeKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntertypeDeclarationAccess().getTypeIntertypeCategoryEnumRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleIntertypeCategory		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntertypeDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"IntertypeCategory");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='idPointcut' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getIntertypeDeclarationAccess().getIdPointcutKeyword_4());
    }
	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIntertypeDeclarationAccess().getLeftParenthesisKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntertypeDeclarationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getIntertypeDeclarationAccess().getIdPointcutPointcutCrossReference_6_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getIntertypeDeclarationAccess().getCommaKeyword_7_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntertypeDeclarationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getIntertypeDeclarationAccess().getIdPointcutPointcutCrossReference_7_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getIntertypeDeclarationAccess().getRightParenthesisKeyword_8());
    }
(	otherlv_10='newElement' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getIntertypeDeclarationAccess().getNewElementKeyword_9_0());
    }
	otherlv_11='{' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getIntertypeDeclarationAccess().getLeftCurlyBracketKeyword_9_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntertypeDeclarationAccess().getNewElementElementParserRuleCall_9_2_0()); 
	    }
		lv_newElement_12_0=ruleElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntertypeDeclarationRule());
	        }
       		add(
       			$current, 
       			"newElement",
        		lv_newElement_12_0, 
        		"Element");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_13=',' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getIntertypeDeclarationAccess().getCommaKeyword_9_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntertypeDeclarationAccess().getNewElementElementParserRuleCall_9_3_1_0()); 
	    }
		lv_newElement_14_0=ruleElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntertypeDeclarationRule());
	        }
       		add(
       			$current, 
       			"newElement",
        		lv_newElement_14_0, 
        		"Element");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getIntertypeDeclarationAccess().getRightCurlyBracketKeyword_9_4());
    }
)?(	otherlv_16='newAttribute' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getIntertypeDeclarationAccess().getNewAttributeKeyword_10_0());
    }
	otherlv_17='{' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getIntertypeDeclarationAccess().getLeftCurlyBracketKeyword_10_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntertypeDeclarationAccess().getNewAttributeAttributeParserRuleCall_10_2_0()); 
	    }
		lv_newAttribute_18_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntertypeDeclarationRule());
	        }
       		add(
       			$current, 
       			"newAttribute",
        		lv_newAttribute_18_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_19=',' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getIntertypeDeclarationAccess().getCommaKeyword_10_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntertypeDeclarationAccess().getNewAttributeAttributeParserRuleCall_10_3_1_0()); 
	    }
		lv_newAttribute_20_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntertypeDeclarationRule());
	        }
       		add(
       			$current, 
       			"newAttribute",
        		lv_newAttribute_20_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_21='}' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getIntertypeDeclarationAccess().getRightCurlyBracketKeyword_10_4());
    }
)?	otherlv_22='}' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getIntertypeDeclarationAccess().getRightCurlyBracketKeyword_11());
    }
)
;





// Entry rule entryRuleOperand
entryRuleOperand returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperandRule()); }
	 iv_ruleOperand=ruleOperand 
	 { $current=$iv_ruleOperand.current; } 
	 EOF 
;

// Rule Operand
ruleOperand returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Operand' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOperandAccess().getOperandKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOperandAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='primitive' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOperandAccess().getPrimitiveKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperandAccess().getPrimitivePrimitiveTypesEnumRuleCall_3_0()); 
	    }
		lv_primitive_3_0=rulePrimitiveTypes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperandRule());
	        }
       		set(
       			$current, 
       			"primitive",
        		lv_primitive_3_0, 
        		"PrimitiveTypes");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='joinpointPointcut' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOperandAccess().getJoinpointPointcutKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperandRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getOperandAccess().getJoinpointPointcutElementCrossReference_5_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6='operator' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getOperandAccess().getOperatorKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperandAccess().getOperatorOperatorParserRuleCall_6_1_0()); 
	    }
		lv_operator_7_0=ruleOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperandRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_7_0, 
        		"Operator");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getOperandAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleOperator
entryRuleOperator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperatorRule()); }
	 iv_ruleOperator=ruleOperator 
	 { $current=$iv_ruleOperator.current; } 
	 EOF 
;

// Rule Operator
ruleOperator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Operator' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOperatorAccess().getOperatorKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOperatorAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='operator' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOperatorAccess().getOperatorKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperatorAccess().getOperatorOperatorTypesEnumRuleCall_3_0()); 
	    }
		lv_operator_3_0=ruleOperatorTypes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperatorRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_3_0, 
        		"OperatorTypes");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOperatorAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	 iv_ruleAttribute=ruleAttribute 
	 { $current=$iv_ruleAttribute.current; } 
	 EOF 
;

// Rule Attribute
ruleAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Attribute' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAttributeAccess().getAttributeKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAttributeAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='type' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAttributeAccess().getTypeKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getTypeEStringParserRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='value' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAttributeAccess().getValueKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getValueEStringParserRuleCall_5_0()); 
	    }
		lv_value_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAttributeAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleIsFeature
entryRuleIsFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIsFeatureRule()); }
	 iv_ruleIsFeature=ruleIsFeature 
	 { $current=$iv_ruleIsFeature.current; } 
	 EOF 
;

// Rule IsFeature
ruleIsFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='IsFeature' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIsFeatureAccess().getIsFeatureKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIsFeatureAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='label' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIsFeatureAccess().getLabelKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIsFeatureAccess().getLabelIsFeatureTypesEnumRuleCall_3_0()); 
	    }
		lv_label_3_0=ruleIsFeatureTypes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIsFeatureRule());
	        }
       		set(
       			$current, 
       			"label",
        		lv_label_3_0, 
        		"IsFeatureTypes");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getIsFeatureAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleCardinality
entryRuleCardinality returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCardinalityRule()); }
	 iv_ruleCardinality=ruleCardinality 
	 { $current=$iv_ruleCardinality.current; } 
	 EOF 
;

// Rule Cardinality
ruleCardinality returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Cardinality' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCardinalityAccess().getCardinalityKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCardinalityAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='cardinalityMin' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCardinalityAccess().getCardinalityMinKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCardinalityAccess().getCardinalityMinEStringParserRuleCall_3_0()); 
	    }
		lv_cardinalityMin_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCardinalityRule());
	        }
       		set(
       			$current, 
       			"cardinalityMin",
        		lv_cardinalityMin_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='cardinalityMax' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCardinalityAccess().getCardinalityMaxKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCardinalityAccess().getCardinalityMaxEStringParserRuleCall_5_0()); 
	    }
		lv_cardinalityMax_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCardinalityRule());
	        }
       		set(
       			$current, 
       			"cardinalityMax",
        		lv_cardinalityMax_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6='source' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCardinalityAccess().getSourceKeyword_6_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCardinalityRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getCardinalityAccess().getSourceElementCrossReference_6_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_8='target' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCardinalityAccess().getTargetKeyword_7_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCardinalityRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getCardinalityAccess().getTargetGoal_ModelCrossReference_7_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getCardinalityAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleGroupFeature
entryRuleGroupFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGroupFeatureRule()); }
	 iv_ruleGroupFeature=ruleGroupFeature 
	 { $current=$iv_ruleGroupFeature.current; } 
	 EOF 
;

// Rule GroupFeature
ruleGroupFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='GroupFeature' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGroupFeatureAccess().getGroupFeatureKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getGroupFeatureAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='cardinalityGroupMin' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGroupFeatureAccess().getCardinalityGroupMinKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGroupFeatureAccess().getCardinalityGroupMinEStringParserRuleCall_3_0()); 
	    }
		lv_cardinalityGroupMin_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGroupFeatureRule());
	        }
       		set(
       			$current, 
       			"cardinalityGroupMin",
        		lv_cardinalityGroupMin_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='cardinalityGroupMax' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getGroupFeatureAccess().getCardinalityGroupMaxKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGroupFeatureAccess().getCardinalityGroupMaxEStringParserRuleCall_5_0()); 
	    }
		lv_cardinalityGroupMax_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGroupFeatureRule());
	        }
       		set(
       			$current, 
       			"cardinalityGroupMax",
        		lv_cardinalityGroupMax_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='source' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getGroupFeatureAccess().getSourceKeyword_6());
    }
	otherlv_7='(' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getGroupFeatureAccess().getLeftParenthesisKeyword_7());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGroupFeatureRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGroupFeatureAccess().getSourceElementCrossReference_8_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getGroupFeatureAccess().getCommaKeyword_9_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGroupFeatureRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGroupFeatureAccess().getSourceElementCrossReference_9_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_11=')' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getGroupFeatureAccess().getRightParenthesisKeyword_10());
    }
(	otherlv_12='target' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getGroupFeatureAccess().getTargetKeyword_11_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGroupFeatureRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGroupFeatureAccess().getTargetGoal_ModelCrossReference_11_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getGroupFeatureAccess().getRightCurlyBracketKeyword_12());
    }
)
;





// Entry rule entryRuleGeneric_Property
entryRuleGeneric_Property returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGeneric_PropertyRule()); }
	 iv_ruleGeneric_Property=ruleGeneric_Property 
	 { $current=$iv_ruleGeneric_Property.current; } 
	 EOF 
;

// Rule Generic_Property
ruleGeneric_Property returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Generic_Property' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGeneric_PropertyAccess().getGeneric_PropertyKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGeneric_PropertyAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGeneric_PropertyRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGeneric_PropertyAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='value' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getGeneric_PropertyAccess().getValueKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGeneric_PropertyAccess().getValueEStringParserRuleCall_4_0()); 
	    }
		lv_value_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGeneric_PropertyRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getGeneric_PropertyAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Rule ElementTypes
ruleElementTypes returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='task' 
	{
        $current = grammarAccess.getElementTypesAccess().getTaskEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getElementTypesAccess().getTaskEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='goal' 
	{
        $current = grammarAccess.getElementTypesAccess().getGoalEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getElementTypesAccess().getGoalEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='softgoal' 
	{
        $current = grammarAccess.getElementTypesAccess().getSoftgoalEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getElementTypesAccess().getSoftgoalEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='task_ref' 
	{
        $current = grammarAccess.getElementTypesAccess().getTask_refEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getElementTypesAccess().getTask_refEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='goal_ref' 
	{
        $current = grammarAccess.getElementTypesAccess().getGoal_refEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getElementTypesAccess().getGoal_refEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='softgoal_ref' 
	{
        $current = grammarAccess.getElementTypesAccess().getSoftgoal_refEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getElementTypesAccess().getSoftgoal_refEnumLiteralDeclaration_5()); 
    }
));



// Rule DecompositionCategory
ruleDecompositionCategory returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='and' 
	{
        $current = grammarAccess.getDecompositionCategoryAccess().getAndEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getDecompositionCategoryAccess().getAndEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='or' 
	{
        $current = grammarAccess.getDecompositionCategoryAccess().getOrEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getDecompositionCategoryAccess().getOrEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='xor' 
	{
        $current = grammarAccess.getDecompositionCategoryAccess().getXorEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getDecompositionCategoryAccess().getXorEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='inc_or' 
	{
        $current = grammarAccess.getDecompositionCategoryAccess().getInc_orEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getDecompositionCategoryAccess().getInc_orEnumLiteralDeclaration_3()); 
    }
));



// Rule CorrelationCategory
ruleCorrelationCategory returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='make' 
	{
        $current = grammarAccess.getCorrelationCategoryAccess().getMakeEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getCorrelationCategoryAccess().getMakeEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='break' 
	{
        $current = grammarAccess.getCorrelationCategoryAccess().getBreakEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getCorrelationCategoryAccess().getBreakEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='help' 
	{
        $current = grammarAccess.getCorrelationCategoryAccess().getHelpEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getCorrelationCategoryAccess().getHelpEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='hurt' 
	{
        $current = grammarAccess.getCorrelationCategoryAccess().getHurtEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getCorrelationCategoryAccess().getHurtEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='unknown' 
	{
        $current = grammarAccess.getCorrelationCategoryAccess().getUnknownEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getCorrelationCategoryAccess().getUnknownEnumLiteralDeclaration_4()); 
    }
));



// Rule PrimitiveTypes
rulePrimitiveTypes returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='include' 
	{
        $current = grammarAccess.getPrimitiveTypesAccess().getIncludeEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getPrimitiveTypesAccess().getIncludeEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='substitute' 
	{
        $current = grammarAccess.getPrimitiveTypesAccess().getSubstituteEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getPrimitiveTypesAccess().getSubstituteEnumLiteralDeclaration_1()); 
    }
));



// Rule OperatorTypes
ruleOperatorTypes returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='and' 
	{
        $current = grammarAccess.getOperatorTypesAccess().getAndEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getOperatorTypesAccess().getAndEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='or' 
	{
        $current = grammarAccess.getOperatorTypesAccess().getOrEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getOperatorTypesAccess().getOrEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='not' 
	{
        $current = grammarAccess.getOperatorTypesAccess().getNotEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getOperatorTypesAccess().getNotEnumLiteralDeclaration_2()); 
    }
));



// Rule AdviceCategory
ruleAdviceCategory returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='around' 
	{
        $current = grammarAccess.getAdviceCategoryAccess().getAroundEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getAdviceCategoryAccess().getAroundEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='before' 
	{
        $current = grammarAccess.getAdviceCategoryAccess().getBeforeEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getAdviceCategoryAccess().getBeforeEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='after' 
	{
        $current = grammarAccess.getAdviceCategoryAccess().getAfterEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getAdviceCategoryAccess().getAfterEnumLiteralDeclaration_2()); 
    }
));



// Rule IntertypeCategory
ruleIntertypeCategory returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='element' 
	{
        $current = grammarAccess.getIntertypeCategoryAccess().getElementEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getIntertypeCategoryAccess().getElementEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='attribute' 
	{
        $current = grammarAccess.getIntertypeCategoryAccess().getAttributeEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getIntertypeCategoryAccess().getAttributeEnumLiteralDeclaration_1()); 
    }
));



// Rule IsFeatureTypes
ruleIsFeatureTypes returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='no' 
	{
        $current = grammarAccess.getIsFeatureTypesAccess().getNoEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getIsFeatureTypesAccess().getNoEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='yes' 
	{
        $current = grammarAccess.getIsFeatureTypesAccess().getYesEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getIsFeatureTypesAccess().getYesEnumLiteralDeclaration_1()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


